Der Buildvorgang wurde am 27.09.2013 20:13:13 gestartet.
     1>Projekt "D:\tt (1)\dev\Srcs\Server\game\src\game.2008.vcxproj" auf Knoten "2", build Ziel(e).
     1>InitializeBuildStatus:
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\game.unsuccessfulbuild" wird erstellt, da "AlwaysCreate" angegeben wurde.
       ClCompile:
         C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\CL.exe /c /I"D:\tt (1)\dev\Srcs\Server\game\src\\" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../liblua/include" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../libmysql/6.0.2/win32" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../libdevil/" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../libxtrap/include" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../../Extern/include" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../../Extern" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../libserverkey" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../../Extern/openssl/include" /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _CONSOLE /D __WIN32__ /D _CRT_SECURE_NO_WARNINGS /D _USE_32BIT_TIME_T /D _WIN32 /D _MBCS /Gm- /EHsc /RTC1 /MTd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\\" /Fd"D:\tt (1)\dev\Srcs\Server\game\src\..\game.pdb" /Gd /TP /analyze- /errorReport:prompt affect.cpp ani.cpp arena.cpp auction_manager.cpp auth_brazil.cpp banword.cpp battle.cpp BattleArena.cpp blend_item.cpp block_country.cpp BlueDragon.cpp BlueDragon_Binder.cpp buff_on_attributes.cpp buffer_manager.cpp building.cpp castle.cpp char.cpp char_affect.cpp char_battle.cpp char_change_empire.cpp char_dragonsoul.cpp char_hackshield.cpp char_horse.cpp char_item.cpp char_manager.cpp char_quickslot.cpp char_resist.cpp char_skill.cpp char_state.cpp cipher.cpp ClientPackageCryptInfo.cpp cmd.cpp cmd_emotion.cpp cmd_general.cpp cmd_gm.cpp cmd_oxevent.cpp config.cpp constants.cpp crc32.cpp cube.cpp db.cpp desc.cpp desc_client.cpp desc_manager.cpp desc_p2p.cpp dev_log.cpp dragon_soul_table.cpp DragonLair.cpp DragonSoul.cpp dungeon.cpp empire_text_convert.cpp entity.cpp entity_view.cpp event.cpp event_queue.cpp exchange.cpp file_loader.cpp fishing.cpp FSM.cpp gm.cpp group_text_parse_tree.cpp guild.cpp guild_manager.cpp guild_war.cpp HackShield.cpp HackShield_Impl.cpp horse_rider.cpp horsename_manager.cpp input.cpp input_auth.cpp input_db.cpp input_login.cpp input_main.cpp input_p2p.cpp input_teen.cpp input_udp.cpp ip_ban.cpp item.cpp item_addon.cpp item_attribute.cpp item_manager.cpp item_manager_idrange.cpp item_manager_read_tables.cpp locale.cpp locale_service.cpp log.cpp login_data.cpp lzo_manager.cpp main.cpp map_location.cpp MarkConvert.cpp MarkImage.cpp MarkManager.cpp marriage.cpp matrix_card.cpp messenger_manager.cpp mining.cpp mob_manager.cpp monarch.cpp motion.cpp over9refine.cpp OXEvent.cpp p2p.cpp packet_info.cpp panama.cpp party.cpp passpod.cpp pcbang.cpp PetSystem.cpp polymorph.cpp priv_manager.cpp pvp.cpp questevent.cpp questlua.cpp questlua_affect.cpp questlua_arena.cpp questlua_ba.cpp questlua_building.cpp questlua_danceevent.cpp questlua_dragonlair.cpp questlua_dragonsoul.cpp questlua_dungeon.cpp questlua_forked.cpp questlua_game.cpp questlua_global.cpp questlua_guild.cpp questlua_horse.cpp questlua_item.cpp questlua_marriage.cpp questlua_mgmt.cpp questlua_monarch.cpp questlua_npc.cpp questlua_oxevent.cpp questlua_party.cpp questlua_pc.cpp questlua_pet.cpp questlua_quest.cpp questlua_speedserver.cpp questlua_target.cpp questmanager.cpp questnpc.cpp questpc.cpp refine.cpp regen.cpp safebox.cpp sectree.cpp sectree_manager.cpp sequence.cpp shop.cpp shop_manager.cpp shopEx.cpp shutdown_manager.cpp skill.cpp skill_power.cpp SpeedServer.cpp start_position.cpp target.cpp text_file_loader.cpp threeway_war.cpp TrafficProfiler.cpp trigger.cpp utils.cpp vector.cpp version.cpp war_map.cpp wedding.cpp xmas_event.cpp XTrapManager.cpp
         affect.cpp
         using native typeof
         ani.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\ani.cpp(98): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         arena.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\arena.h(34): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CArenaMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CArenaMap *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\arena.h(108): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CArenaMap *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         auction_manager.cpp
         using native typeof
         auth_brazil.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\auth_brazil.cpp(75): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\auth_brazil.cpp(77): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\auth_brazil.cpp(79): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\auth_brazil.cpp(81): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\auth_brazil.cpp(119): warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\io.h(302): Siehe Deklaration von 'close'
     1>d:\tt (1)\dev\srcs\server\game\src\auth_brazil.cpp(127): warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\io.h(313): Siehe Deklaration von 'read'
     1>d:\tt (1)\dev\srcs\server\game\src\auth_brazil.cpp(128): warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\io.h(302): Siehe Deklaration von 'close'
     1>d:\tt (1)\dev\srcs\server\game\src\auth_brazil.cpp(163): warning C4996: 'fileno': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\stdio.h(723): Siehe Deklaration von 'fileno'
         banword.cpp
         using native typeof
         battle.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\battle.cpp(684): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\battle.cpp(685): warning C4244: '=': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CProfiler::SProfileAccumData>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\profiler.h(236): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
         BattleArena.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(127): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         blend_item.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\blend_item.cpp(82): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\blend_item.cpp(87): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\blend_item.cpp(99): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\blend_item.cpp(111): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\blend_item.cpp(126): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\blend_item.cpp(141): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
         block_country.cpp
         using native typeof
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\block_country.cpp(29): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=std::string
                 ]
         BlueDragon.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(289): warning C4244: 'Initialisierung': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(290): warning C4244: 'Initialisierung': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(302): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(303): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(306): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(307): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(310): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(311): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(314): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(315): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(318): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\bluedragon_skill.h(319): warning C4244: '=': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         BlueDragon_Binder.cpp
         using native typeof
         buff_on_attributes.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<BYTE,int,std::less<BYTE>,std::allocator<std::pair<const BYTE,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\buff_on_attributes.h(35): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=BYTE,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         buffer_manager.cpp
         using native typeof
         building.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(113): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(279): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(532): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1075): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1100): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1100): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1101): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1101): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1102): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1102): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1103): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1103): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1109): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1109): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1110): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1110): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1111): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1111): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1112): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1112): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1118): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1118): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1119): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1119): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1120): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1120): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1121): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1121): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1127): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1127): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1128): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1128): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1129): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1129): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1130): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1130): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1221): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1227): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1231): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1235): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\building.cpp(1239): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,building::LPOBJECT ,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::LPOBJECT >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\building.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=building::LPOBJECT
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,building::SObjectProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::SObjectProto *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\building.h(144): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=building::TObjectProto *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,building::CLand *,std::less<DWORD>,std::allocator<std::pair<const DWORD,building::CLand *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\building.h(146): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=building::CLand *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         castle.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\castle.cpp(459): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\castle.cpp(463): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\castle.cpp(477): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\castle.cpp(491): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\castle.cpp(506): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(127): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.h(52): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(1090): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(1673): warning C4244: 'return': Konvertierung von 'const DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(1676): warning C4244: 'return': Konvertierung von 'const DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(1785): warning C4244: 'Argument': Konvertierung von 'const WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(1979): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(3079): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(3082): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(3708): warning C4244: 'Argument': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(3718): warning C4244: 'Argument': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(5452): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(5466): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(5498): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(5500): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(5536): warning C4244: 'return': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char.cpp(6286): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1022): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPEVENT
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1926): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<TItemPos,std::less<TItemPos>,std::allocator<TItemPos>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.cpp(635): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=TItemPos
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(133): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<unsigned int,BGMInfo,std::less<CDungeon::IdType>,std::allocator<std::pair<const unsigned int,BGMInfo>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.cpp(1493): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=unsigned int,
                     _Ty=BGMInfo
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const BYTE,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const BYTE,int>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const BYTE,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const BYTE,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const BYTE,int>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const BYTE,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const unsigned char &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const BYTE,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<BYTE,boost::hash<unsigned char>,std::equal_to<BYTE>,std::allocator<std::pair<const BYTE,int>>>,
                     Arg0=std::pair<const BYTE,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,int>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const BYTE,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<BYTE,boost::hash<unsigned char>,std::equal_to<BYTE>,std::allocator<std::pair<const BYTE,int>>>,
                     K=BYTE,
                     Arg0=std::pair<const BYTE,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const BYTE,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=BYTE,
                     T=int
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1456): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=BYTE,
                     T=int
                 ]
         char_affect.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char_battle.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_battle.cpp(2240): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_battle.cpp(2241): warning C4244: '=': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_battle.cpp(3219): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_battle.cpp(3334): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_battle.cpp(3469): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<VID,CHARACTER::TBattleInfo,std::less<VID>,std::allocator<std::pair<const VID,CHARACTER::TBattleInfo>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1324): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=VID,
                     _Ty=CHARACTER::TBattleInfo
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<LPPARTY ,TDamageInfo,std::less<LPPARTY >,std::allocator<std::pair<const LPPARTY ,TDamageInfo>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_battle.cpp(2657): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=LPPARTY,
                     _Ty=TDamageInfo
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1457): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=TSkillUseInfo
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(127): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CProfiler::SProfileAccumData>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\profiler.h(236): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
         char_change_empire.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         Code wird generiert...
         Kompilieren...
         char_dragonsoul.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char_hackshield.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char_horse.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char_item.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(276): warning C4244: 'Argument': Konvertierung von 'long' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(412): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(528): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(929): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(1202): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(1231): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(1372): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(1375): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(1379): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(1384): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(2660): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(3032): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(3568): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5302): warning C4554: '|': Prüfen Sie Operatorrangfolge auf mögliche Fehler; verwenden Sie runde Klammern, um den Vorrang zu verdeutlichen
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5375): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5377): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5578): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5602): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5602): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5768): warning C4244: 'Initialisierung': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5965): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5983): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(5984): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(6106): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(6113): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(6509): warning C4244: '=': Konvertierung von 'long' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(6827): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(6844): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(7034): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(7103): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(7278): warning C4805: '==': unsichere Kombination von Typ 'bool' mit Typ 'long' in einer Operation
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<BYTE,CBuffOnAttributes *,std::less<BYTE>,std::allocator<std::pair<const BYTE,CBuffOnAttributes *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1970): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=BYTE,
                     _Ty=CBuffOnAttributes *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPCHARACTER ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\arena.h(34): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_manager.cpp(226): warning C4996: 'strnicmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(248): Siehe Deklaration von 'strnicmp'
     1>d:\tt (1)\dev\srcs\server\game\src\char_manager.cpp(333): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_manager.cpp(378): warning C4800: 'DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_manager.cpp(383): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_manager.cpp(391): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_manager.cpp(434): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_manager.cpp(558): warning C4800: 'LPCHARACTER': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1926): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(133): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CHARACTER_SET,std::less<DWORD>,std::allocator<std::pair<const DWORD,CHARACTER_SET>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(136): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CHARACTER_SET
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const DWORD,LPCHARACTER >>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const unsigned long &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>>,
                     Arg0=std::pair<const DWORD,LPCHARACTER >
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CHARACTER>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,LPCHARACTER >>>,
                     K=DWORD,
                     Arg0=std::pair<const DWORD,LPCHARACTER >
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const DWORD,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=DWORD,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(122): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=DWORD,
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,LPCHARACTER >>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>>,
                     Arg0=std::pair<const std::string,LPCHARACTER >,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CHARACTER>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,LPCHARACTER >
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,LPCHARACTER >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(124): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=LPCHARACTER
                 ]
         char_quickslot.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_quickslot.cpp(148): warning C4244: '=': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char_resist.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char_skill.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(511): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(945): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(1169): warning C4804: '>': unsichere Verwendung des Typs 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(1394): warning C4244: '-=': Konvertierung von 'double' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(1699): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'const float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(2022): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(2027): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'const float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(2528): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'const float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(2931): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'const float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_skill.cpp(2954): warning C4244: 'Argument': Konvertierung von 'const DWORD' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,LPEVENT,std::less<int>,std::allocator<std::pair<const int,LPEVENT>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1735): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=LPEVENT
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,TSkillUseInfo,std::less<int>,std::allocator<std::pair<const int,TSkillUseInfo>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1457): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=TSkillUseInfo
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const VID,size_t>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const VID,size_t>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const VID,size_t>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const VID,size_t>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const VID,size_t>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const VID,size_t>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const VID &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const VID,size_t>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<VID,boost::hash<VID>,std::equal_to<VID>,std::allocator<std::pair<const VID,size_t>>>,
                     Arg0=std::pair<const VID,size_t>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,unsigned int>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const VID,size_t>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<VID,boost::hash<VID>,std::equal_to<VID>,std::allocator<std::pair<const VID,size_t>>>,
                     K=VID,
                     Arg0=std::pair<const VID,size_t>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const VID,size_t>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=VID,
                     T=size_t
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(462): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=VID,
                     T=size_t
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         char_state.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(248): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(258): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(263): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(268): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(273): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(278): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(288): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(291): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(327): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(337): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(347): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(357): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(590): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(597): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(600): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(691): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(706): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(709): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(749): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(755): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(967): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(969): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(1036): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(1046): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(1196): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(1203): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(1212): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\char_state.cpp(1215): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         cipher.cpp
         using native typeof
         ClientPackageCryptInfo.cpp
         using native typeof
         cmd.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd.cpp(600): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         cmd_emotion.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_emotion.cpp(169): warning C4800: 'long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\marriage.h(134): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=std::pair<DWORD,DWORD>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         cmd_general.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_general.cpp(469): warning C4244: 'Argument': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_general.cpp(2342): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         cmd_gm.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(251): warning C4996: 'strnicmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(248): Siehe Deklaration von 'strnicmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(260): warning C4996: 'strnicmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(248): Siehe Deklaration von 'strnicmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(268): warning C4996: 'strnicmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(248): Siehe Deklaration von 'strnicmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(1257): warning C4805: '==': unsichere Kombination von Typ 'BOOL' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(1549): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(1816): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(1833): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(1885): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(1902): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(2938): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(2939): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(2940): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\cmd_gm.cpp(2974): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         cmd_oxevent.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         config.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(154): warning C4804: '>': unsichere Verwendung des Typs 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(393): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(398): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(404): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(410): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(416): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(422): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(427): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(434): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(440): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(464): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(488): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(513): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(586): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(726): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(734): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(740): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(747): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(753): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(761): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(767): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(773): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(779): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(792): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(800): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(808): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(814): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(823): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(841): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(847): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(853): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(859): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(865): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(872): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(903): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(909): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(915): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(921): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(928): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(938): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(950): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(955): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(961): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(977): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(990): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(995): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1000): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1005): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1010): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1015): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1020): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1025): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1030): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1035): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1041): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1047): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1052): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1056): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1060): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1065): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1078): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1086): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1094): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1105): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1111): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1119): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1125): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1130): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1144): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1195): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1197): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1199): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1201): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1203): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\config.cpp(1205): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1926): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\config.h(87): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=std::string
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\libserverkey\sim.h(367): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=unsigned int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\config.cpp(162): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         constants.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\constants.cpp(1293): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         crc32.cpp
         using native typeof
         cube.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(307): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(406): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(410): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(414): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(421): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(428): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(432): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(437): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(544): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(557): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>d:\tt (1)\dev\srcs\server\game\src\cube.cpp(783): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         Code wird generiert...
     1>d:\tt (1)\dev\srcs\server\game\src\char_item.cpp(681): warning C4715: "CHARACTER::IsEmptyItemGrid": Nicht alle Steuerelementpfade geben einen Wert zurück.
     1>d:\tt (1)\dev\srcs\server\game\src\char_dragonsoul.cpp(91): warning C4715: "CHARACTER::DragonSoul_ActivateDeck": Nicht alle Steuerelementpfade geben einen Wert zurück.
         Kompilieren...
         db.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\db.cpp(1081): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\db.h(136): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=std::string
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CLoginData *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginData *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\db.h(138): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CLoginData *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,CLoginData *,std::less<std::string>,std::allocator<std::pair<const std::string,CLoginData *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\db.h(139): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=CLoginData *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         desc.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         desc_client.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\desc_client.cpp(299): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         desc_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\desc_manager.h(79): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,LPDESC ,std::less<int>,std::allocator<std::pair<const int,LPDESC >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\desc_manager.h(84): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=LPDESC
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPDESC ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPDESC >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\desc_manager.h(85): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPDESC
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CLoginKey *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLoginKey *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\desc_manager.h(88): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CLoginKey *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCLIENT_DESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCLIENT_DESC >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCLIENT_DESC >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCLIENT_DESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCLIENT_DESC >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCLIENT_DESC >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CLIENT_DESC *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCLIENT_DESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCLIENT_DESC >,std::equal_to<LPCLIENT_DESC >,std::allocator<LPCLIENT_DESC >>,
                     Arg0=CLIENT_DESC *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CLIENT_DESC*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCLIENT_DESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCLIENT_DESC >,std::equal_to<LPCLIENT_DESC >,std::allocator<LPCLIENT_DESC >>,
                     Arg0=CLIENT_DESC *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CLIENT_DESC *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCLIENT_DESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCLIENT_DESC
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\desc_manager.h(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCLIENT_DESC
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPDESC >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(DESC *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPDESC >,std::equal_to<LPDESC >,std::allocator<LPDESC >>,
                     Arg0=DESC *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<DESC*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPDESC >,std::equal_to<LPDESC >,std::allocator<LPDESC >>,
                     Arg0=DESC *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(DESC *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPDESC
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\desc_manager.h(82): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPDESC
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPDESC >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPDESC >>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPDESC >>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPDESC >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,LPDESC >>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPDESC >>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPDESC >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,LPDESC >>>,
                     Arg0=std::pair<const std::string,LPDESC >,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,DESC>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,LPDESC >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,LPDESC >>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,LPDESC >
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,LPDESC >>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=LPDESC
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\desc_manager.h(87): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=LPDESC
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         desc_p2p.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
         dev_log.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\dev_log.cpp(134): warning C4996: 'write': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _write. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\io.h(318): Siehe Deklaration von 'write'
     1>d:\tt (1)\dev\srcs\server\game\src\dev_log.cpp(135): warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\io.h(302): Siehe Deklaration von 'close'
         dragon_soul_table.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(223): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(283): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(311): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(343): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(372): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(397): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(427): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(453): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(494): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(513): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(522): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(545): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(220): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(129): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<std::string>(const std::string &,T &) const".
                 with
                 [
                     T=std::string
                 ]
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(220): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(134): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<BYTE>(const std::string &,T &) const".
                 with
                 [
                     T=BYTE
                 ]
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(220): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(201): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<int>(const std::string &,T &) const".
                 with
                 [
                     T=int
                 ]
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(220): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(260): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<float>(const std::string &,T &) const".
                 with
                 [
                     T=float
                 ]
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(228): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(828): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<float>(int,T &) const".
                 with
                 [
                     T=float
                 ]
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(228): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(159): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<int>(int,T &) const".
                 with
                 [
                     T=int
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(203): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::GetValue<T>(const std::string &,const std::string &,T &) const".
                 with
                 [
                     T=int
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(612): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::GetGroupValue<int>(const std::string &,const std::string &,const std::string &,T &) const".
                 with
                 [
                     T=int
                 ]
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(228): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(159): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<T>(int,T &) const".
                 with
                 [
                     T=DWORD
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(203): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::GetValue<T>(const std::string &,const std::string &,T &) const".
                 with
                 [
                     T=DWORD
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.cpp(884): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::GetGroupValue<DWORD>(const std::string &,const std::string &,const std::string &,T &) const".
                 with
                 [
                     T=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,BYTE,std::less<std::string>,std::allocator<std::pair<const std::string,BYTE>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.h(56): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=BYTE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<BYTE,std::string,std::less<BYTE>,std::allocator<std::pair<const BYTE,std::string>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.h(57): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=BYTE,
                     _Ty=std::string
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<BYTE,DragonSoulTable::TVecApplys,std::less<BYTE>,std::allocator<std::pair<const BYTE,DragonSoulTable::TVecApplys>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dragon_soul_table.h(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=BYTE,
                     _Ty=DragonSoulTable::TVecApplys
                 ]
         DragonLair.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CDragonLair *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CDragonLair *>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CDragonLair *>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CDragonLair *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const DWORD,CDragonLair *>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CDragonLair *>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const unsigned long &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CDragonLair *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,CDragonLair *>>>,
                     Arg0=std::pair<const DWORD,CDragonLair *>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CDragonLair>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CDragonLair *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,CDragonLair *>>>,
                     K=DWORD,
                     Arg0=std::pair<const DWORD,CDragonLair *>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const DWORD,CDragonLair *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=DWORD,
                     T=CDragonLair *
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dragonlair.h(35): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=DWORD,
                     T=CDragonLair *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         DragonSoul.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\dragonsoul.cpp(19): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragonsoul.cpp(25): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragonsoul.cpp(79): warning C4244: 'return': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\dragonsoul.cpp(203): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragonsoul.cpp(273): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\dragonsoul.cpp(555): warning C4101: 'prob_sum': Unreferenzierte lokale Variable
     1>d:\tt (1)\dev\srcs\server\game\src\dragonsoul.cpp(1063): warning C4800: 'long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<LPITEM ,std::less<LPITEM >,std::allocator<LPITEM >,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dragonsoul.cpp(524): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=LPITEM
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         dungeon.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(128): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,CDungeon::ItemGroup,std::less<std::string>,std::allocator<std::pair<const std::string,CDungeon::ItemGroup>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(130): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=CDungeon::ItemGroup
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,LPCHARACTER ,std::less<std::string>,std::allocator<std::pair<const std::string,LPCHARACTER >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(133): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<CDungeon::IdType,LPDUNGEON ,std::less<CDungeon::IdType>,std::allocator<std::pair<const CDungeon::IdType,LPDUNGEON >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(190): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=CDungeon::IdType,
                     _Ty=LPDUNGEON
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<long,LPDUNGEON ,std::less<long>,std::allocator<std::pair<const long,LPDUNGEON >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(191): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=long,
                     _Ty=LPDUNGEON
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(127): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPPARTY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPPARTY ,int>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPPARTY ,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPPARTY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const LPPARTY ,int>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPPARTY ,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CParty *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPPARTY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<LPPARTY ,boost::hash<LPPARTY >,std::equal_to<LPPARTY >,std::allocator<std::pair<const LPPARTY ,int>>>,
                     Arg0=std::pair<const LPPARTY ,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,int>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPPARTY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<LPPARTY ,boost::hash<LPPARTY >,std::equal_to<LPPARTY >,std::allocator<std::pair<const LPPARTY ,int>>>,
                     K=LPPARTY,
                     Arg0=std::pair<const LPPARTY ,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const LPPARTY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=LPPARTY,
                     T=int
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(131): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=LPPARTY,
                     T=int
                 ]
         empire_text_convert.cpp
         using native typeof
         entity.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         entity_view.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPENTITY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPENTITY ,int>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPENTITY ,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPENTITY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const LPENTITY ,int>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPENTITY ,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CEntity *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPENTITY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<LPENTITY ,boost::hash<LPENTITY >,std::equal_to<LPENTITY >,std::allocator<std::pair<const LPENTITY ,int>>>,
                     Arg0=std::pair<const LPENTITY ,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,int>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPENTITY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<LPENTITY ,boost::hash<LPENTITY >,std::equal_to<LPENTITY >,std::allocator<std::pair<const LPENTITY ,int>>>,
                     K=LPENTITY,
                     Arg0=std::pair<const LPENTITY ,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const LPENTITY ,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=LPENTITY,
                     T=int
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\entity.h(62): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=LPENTITY,
                     T=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         event.cpp
         using native typeof
         event_queue.cpp
         using native typeof
         exchange.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\exchange.cpp(447): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         file_loader.cpp
         using native typeof
         fishing.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\fishing.cpp(880): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\fishing.cpp(898): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questpc.h(171): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         FSM.cpp
         gm.cpp
         using native typeof
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\gm.cpp(15): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=std::string
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,tGM,std::less<std::string>,std::allocator<std::pair<const std::string,tGM>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\gm.cpp(16): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=tGM
                 ]
         Code wird generiert...
         Kompilieren...
         group_text_parse_tree.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.cpp(99): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.cpp(206): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,CGroupNode *,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(70): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=CGroupNode *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(73): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,CGroupNode::CGroupNodeRow,std::less<std::string>,std::allocator<std::pair<const std::string,CGroupNode::CGroupNodeRow>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(74): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=CGroupNode::CGroupNodeRow
                 ]
         guild.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.cpp(583): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.cpp(2101): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPEVENT,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPEVENT>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1022): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPEVENT
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1926): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,TGuildMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildMember>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild.h(358): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=TGuildMember
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         guild_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,std::pair<DWORD,DWORD>,std::less<std::string>,std::allocator<std::pair<const std::string,std::pair<DWORD,DWORD>>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild_manager.h(13): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=std::pair<DWORD,DWORD>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CGuild *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuild *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild_manager.h(82): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CGuild *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild_manager.h(85): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=std::pair<DWORD,DWORD>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CGuildWarReserveForGame *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildWarReserveForGame *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild_manager.h(92): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CGuildWarReserveForGame *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::pair<DWORD,DWORD>,DWORD,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<const std::pair<DWORD,DWORD>,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild_manager.h(88): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::pair<DWORD,DWORD>,
                     _Ty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         guild_war.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild_war.cpp(85): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,TGuildWar,std::less<DWORD>,std::allocator<std::pair<const DWORD,TGuildWar>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild.h(373): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=TGuildWar
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         HackShield.cpp
         using native typeof
         HackShield_Impl.cpp
         using native typeof
         horse_rider.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
         horsename_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,std::string,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::string>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\horsename_manager.h(5): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=std::string
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(127): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         input.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(204): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=unsigned int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CProfiler::SProfileAccumData>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\profiler.h(236): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
         input_auth.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\libserverkey\sim.h(367): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=unsigned int
                 ]
         input_db.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_db.cpp(1415): warning C4800: 'BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\input_db.cpp(1538): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_db.cpp(1555): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_db.cpp(1659): warning C4800: 'BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\input_db.cpp(1844): warning C4805: '==': unsichere Kombination von Typ 'BYTE' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\input_db.cpp(1961): warning C4800: 'BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\constants.h(152): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=TItemAttrTable
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         input_login.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\input_login.cpp(486): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_login.cpp(689): warning C4805: '==': unsichere Kombination von Typ 'BOOL' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\input_login.cpp(710): warning C4244: 'Argument': Konvertierung von 'long' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_login.cpp(710): warning C4244: 'Argument': Konvertierung von 'long' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_login.cpp(959): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         input_main.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(1200): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(1464): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(1559): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(1598): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(1886): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(2046): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(2146): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(2146): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(2233): warning C4800: 'BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(2846): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CProfiler::SProfileAccumData>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\profiler.h(236): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>>,
                     Arg0=std::pair<const std::string,std::pair<unsigned int,LPEVENT>>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,std::pair<unsigned int,LPEVENT>>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,std::pair<unsigned int,LPEVENT>>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,std::pair<unsigned int,LPEVENT>>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=std::pair<unsigned int,LPEVENT>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\input_main.cpp(92): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=std::pair<unsigned int,LPEVENT>
                 ]
         input_p2p.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         input_teen.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         input_udp.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\input_udp.cpp(119): warning C4065: switch-Anweisung enthält 'default', aber keine case-Marken
         ip_ban.cpp
         using native typeof
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,std::vector<IP>,std::less<int>,std::allocator<std::pair<const int,std::vector<IP>>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\ip_ban.cpp(138): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=std::vector<IP>
                 ]
         item.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(49): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(214): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(260): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(264): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(274): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(690): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(705): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(726): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(769): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(787): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(787): warning C4244: 'Argument': Konvertierung von 'const DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(1380): warning C4060: switch-Anweisung enthält weder 'case'- noch 'default'-Marken
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(2013): warning C4244: 'Initialisierung': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item.cpp(2016): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CProfiler::SProfileAccumData>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\profiler.h(236): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
         item_addon.cpp
         using native typeof
         item_attribute.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_attribute.cpp(110): warning C4244: 'Argument': Konvertierung von 'long' in 'short', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_attribute.cpp(406): warning C4244: '=': Konvertierung von 'const DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_attribute.cpp(407): warning C4244: '=': Konvertierung von 'const long' in 'short', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,TItemAttrTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemAttrTable>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\constants.h(152): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=TItemAttrTable
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         Code wird generiert...
         Kompilieren...
         item_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager.cpp(521): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager.cpp(612): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager.cpp(662): warning C4996: 'strnicmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(248): Siehe Deklaration von 'strnicmp'
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager.cpp(680): warning C4996: 'strnicmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(248): Siehe Deklaration von 'strnicmp'
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager.cpp(1128): warning C4800: 'unsigned int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager.cpp(1236): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager.cpp(1364): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1926): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(133): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPITEM ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPITEM >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(430): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPITEM
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,TItemTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TItemTable>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(466): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=TItemTable
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPITEM >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPITEM >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPITEM >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPITEM >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPITEM >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPITEM >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CItem *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPITEM >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPITEM >,std::equal_to<LPITEM >,std::allocator<LPITEM >>,
                     Arg0=CItem *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CItem*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPITEM >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPITEM >,std::equal_to<LPITEM >,std::allocator<LPITEM >>,
                     Arg0=CItem *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CItem *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPITEM >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPITEM
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(436): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPITEM
                 ]
         item_manager_idrange.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
         item_manager_read_tables.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager_read_tables.cpp(71): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager_read_tables.cpp(461): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager_read_tables.cpp(673): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager_read_tables.cpp(722): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager_read_tables.cpp(772): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\item_manager_read_tables.cpp(869): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(133): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CDropItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CDropItemGroup *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(439): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CDropItemGroup *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CSpecialItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialItemGroup *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(440): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CSpecialItemGroup *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CSpecialAttrGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSpecialAttrGroup *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(442): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CSpecialAttrGroup *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CMobItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobItemGroup *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(443): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CMobItemGroup *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CLevelItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CLevelItemGroup *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(444): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CLevelItemGroup *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CBuyerThiefGlovesItemGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CBuyerThiefGlovesItemGroup *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\item_manager.h(445): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CBuyerThiefGlovesItemGroup *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\priv_manager.h(59): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         locale.cpp
         using native typeof
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,std::string,std::less<std::string>,std::allocator<std::pair<const std::string,std::string>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\locale.cpp(7): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=std::string
                 ]
         locale_service.cpp
         using native typeof
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<std::string,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\config.h(87): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=std::string
                 ]
         log.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\log.cpp(292): warning C4805: '==': unsichere Kombination von Typ 'BOOL' mit Typ 'bool' in einer Operation
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         login_data.cpp
         using native typeof
         lzo_manager.cpp
         using native typeof
         main.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\main.cpp(699): warning C4244: '=': Konvertierung von 'long' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\main.cpp(763): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(204): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=unsigned int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CProfiler::SProfileAccumData>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\profiler.h(236): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
         map_location.cpp
         using native typeof
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<long,CMapLocation::TLocation,std::less<long>,std::allocator<std::pair<const long,CMapLocation::TLocation>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\map_location.h(18): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=long,
                     _Ty=CMapLocation::TLocation
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
         MarkConvert.cpp
         using native typeof
         MarkImage.cpp
         using native typeof
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<BYTE,const SGuildMarkBlock *,std::less<BYTE>,std::allocator<std::pair<const BYTE,const SGuildMarkBlock *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\markimage.cpp(240): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=BYTE,
                     _Ty=const SGuildMarkBlock *
                 ]
         MarkManager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\markmanager.cpp(206): warning C4244: '=': Konvertierung von 'const DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\markmanager.cpp(207): warning C4244: '=': Konvertierung von 'const DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CGuildMarkImage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkImage *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\markmanager.h(69): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CGuildMarkImage *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\markmanager.h(70): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\markmanager.h(72): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CGuildMarkManager::TGuildSymbol,std::less<DWORD>,std::allocator<std::pair<const DWORD,CGuildMarkManager::TGuildSymbol>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\markmanager.h(79): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CGuildMarkManager::TGuildSymbol
                 ]
         marriage.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\marriage.cpp(616): warning C4800: 'BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,marriage::TMarriage *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::TMarriage *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\marriage.h(133): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=marriage::TMarriage *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<std::pair<DWORD,DWORD>,std::less<std::pair<DWORD,DWORD>>,std::allocator<std::pair<DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\marriage.h(134): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=std::pair<DWORD,DWORD>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<marriage::TMarriage *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<marriage::TMarriage *>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<marriage::TMarriage *>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<marriage::TMarriage *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<marriage::TMarriage *>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<marriage::TMarriage *>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(marriage::TMarriage *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<marriage::TMarriage *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<marriage::TMarriage *>,std::equal_to<marriage::TMarriage *>,std::allocator<marriage::TMarriage *>>,
                     Arg0=marriage::TMarriage *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<marriage::TMarriage*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<marriage::TMarriage *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<marriage::TMarriage *>,std::equal_to<marriage::TMarriage *>,std::allocator<marriage::TMarriage *>>,
                     Arg0=marriage::TMarriage *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(marriage::TMarriage *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<marriage::TMarriage *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=marriage::TMarriage *
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\marriage.h(132): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=marriage::TMarriage *
                 ]
         matrix_card.cpp
         using native typeof
         messenger_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(939): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(903): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::insert(const std::basic_string<_Elem,std::char_traits<char>,_Ax> &,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>,
                     _Elem=char,
                     _Ax=std::allocator<char>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<MessengerManager::keyT,std::less<std::string>,std::allocator<std::string>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\messenger_manager.h(44): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=MessengerManager::keyT
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\messenger_manager.h(47): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<MessengerManager::keyT,std::set<MessengerManager::keyT>,std::less<std::string>,std::allocator<std::pair<const MessengerManager::keyT,std::set<MessengerManager::keyT>>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\messenger_manager.h(45): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=MessengerManager::keyT,
                     _Ty=std::set<MessengerManager::keyT>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         mining.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\mining.cpp(256): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\mining.cpp(273): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         mob_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CMob *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMob *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\mob_manager.h(126): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CMob *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,CMob *,std::less<std::string>,std::allocator<std::pair<const std::string,CMob *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\mob_manager.h(152): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=CMob *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CMobGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroup *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\mob_manager.h(153): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CMobGroup *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CMobGroupGroup *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMobGroupGroup *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\mob_manager.h(154): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CMobGroupGroup *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,double,std::less<DWORD>,std::allocator<std::pair<const DWORD,double>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\mob_manager.h(156): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=double
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         monarch.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\monarch.cpp(182): warning C4244: 'return': Konvertierung von 'int64_t' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\monarch.cpp(197): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\monarch.cpp(202): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         motion.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\motion.cpp(26): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\motion.cpp(109): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\motion.cpp(510): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CMotion *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotion *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\motion.h(99): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CMotion *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CMotionSet *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CMotionSet *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\motion.h(120): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CMotionSet *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,float,std::less<DWORD>,std::allocator<std::pair<const DWORD,float>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\motion.h(140): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=float
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         Code wird generiert...
         Kompilieren...
         over9refine.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const DWORD,DWORD>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const unsigned long &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>>,
                     Arg0=std::pair<const DWORD,DWORD>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const _Kty,_Ty>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>>,
                     _Kty=DWORD,
                     _Ty=DWORD,
                     Arg0=std::pair<const DWORD,DWORD>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const _Kty,_Ty> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=DWORD,
                     T=DWORD,
                     _Kty=DWORD,
                     _Ty=DWORD
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\over9refine.h(11): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=DWORD,
                     T=DWORD
                 ]
         OXEvent.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,DWORD,std::less<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(133): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         p2p.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPDESC >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(DESC *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPDESC >,std::equal_to<LPDESC >,std::allocator<LPDESC >>,
                     Arg0=DESC *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<DESC*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPDESC >,std::equal_to<LPDESC >,std::allocator<LPDESC >>,
                     Arg0=DESC *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(DESC *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPDESC >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPDESC
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\p2p.h(63): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPDESC
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,_CCI *>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,stringhash,std::equal_to<std::string>,std::allocator<std::pair<const std::string,_CCI *>>>,
                     Arg0=std::pair<const std::string,_CCI *>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,_CCI>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,stringhash,std::equal_to<std::string>,std::allocator<std::pair<const std::string,_CCI *>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,_CCI *>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T,H>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=CCI *,
                     H=stringhash
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\p2p.h(64): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T,H>".
                 with
                 [
                     K=std::string,
                     T=CCI *,
                     H=stringhash
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const DWORD,_CCI *>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const unsigned long &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,_CCI *>>>,
                     Arg0=std::pair<const DWORD,_CCI *>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,_CCI>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,_CCI *>>>,
                     K=DWORD,
                     Arg0=std::pair<const DWORD,_CCI *>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const DWORD,_CCI *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=DWORD,
                     T=CCI *
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\p2p.h(65): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=DWORD,
                     T=CCI *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         packet_info.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,SPacketElement *,std::less<int>,std::allocator<std::pair<const int,SPacketElement *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\packet_info.h(36): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=TPacketElement *
                 ]
         panama.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
         party.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\party.cpp(1364): warning C4018: '>': Konflikt zwischen 'signed' und 'unsigned'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPPARTY ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPPARTY >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\party.h(72): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPPARTY
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<LPPARTY ,std::less<LPPARTY >,std::allocator<LPPARTY >,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\party.h(75): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=LPPARTY
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CParty::TMember,std::less<DWORD>,std::allocator<std::pair<const DWORD,CParty::TMember>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\party.h(214): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CParty::TMember
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\party.h(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         passpod.cpp
         using native typeof
         pcbang.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<PCBang_IP,PCBang_ID,std::less<DWORD>,std::allocator<std::pair<const PCBang_IP,PCBang_ID>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\pcbang.h(8): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=PCBang_IP,
                     _Ty=PCBang_ID
                 ]
         PetSystem.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.h(52): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(195): warning C4244: 'Argument': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(195): warning C4244: 'Argument': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(195): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(213): warning C4244: 'Argument': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(213): warning C4244: 'Argument': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(254): warning C4244: 'Initialisierung': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(261): warning C4244: 'Argument': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(261): warning C4244: 'Argument': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(277): warning C4244: 'Argument': Konvertierung von 'int' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(330): warning C4244: 'Initialisierung': Konvertierung von 'long' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(331): warning C4244: 'Initialisierung': Konvertierung von 'long' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(333): warning C4244: 'Initialisierung': Konvertierung von 'long' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(334): warning C4244: 'Initialisierung': Konvertierung von 'long' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(336): warning C4244: 'Argument': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(336): warning C4244: 'Argument': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(340): warning C4244: 'Argument': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.cpp(340): warning C4244: 'Argument': Konvertierung von 'float' in 'long', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CPetActor *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CPetActor *>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CPetActor *>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CPetActor *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const DWORD,CPetActor *>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CPetActor *>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const unsigned long &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CPetActor *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,CPetActor *>>>,
                     Arg0=std::pair<const DWORD,CPetActor *>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CPetActor>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,CPetActor *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,CPetActor *>>>,
                     K=DWORD,
                     Arg0=std::pair<const DWORD,CPetActor *>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const DWORD,CPetActor *>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=DWORD,
                     T=CPetActor *
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\petsystem.h(128): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=DWORD,
                     T=CPetActor *
                 ]
         polymorph.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const DWORD,DWORD>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const unsigned long &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>>,
                     Arg0=std::pair<const DWORD,DWORD>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,unsigned long>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>>,
                     K=DWORD,
                     Arg0=std::pair<const DWORD,DWORD>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=DWORD,
                     T=DWORD
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\polymorph.h(21): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=DWORD,
                     T=DWORD
                 ]
         priv_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CPrivManager::SPrivGuildData,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPrivManager::SPrivGuildData>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\priv_manager.h(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CPrivManager::SPrivGuildData
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,int,std::less<DWORD>,std::allocator<std::pair<const DWORD,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\priv_manager.h(59): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         pvp.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CPVP *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CPVP *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\pvp.h(75): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CPVP *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,boost::unordered_set<CPVP *>,std::less<DWORD>,std::allocator<std::pair<const DWORD,boost::unordered_set<CPVP *>>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\pvp.h(76): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=boost::unordered_set<CPVP *>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<CPVP *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<CPVP *>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<CPVP *>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<CPVP *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<CPVP *>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<CPVP *>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CPVP *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<CPVP *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<CPVP *>,std::equal_to<CPVP *>,std::allocator<CPVP *>>,
                     Arg0=CPVP *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CPVP*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<CPVP *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<CPVP *>,std::equal_to<CPVP *>,std::allocator<CPVP *>>,
                     Arg0=CPVP *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CPVP *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<CPVP *>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=CPVP *
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\pvp.cpp(199): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=CPVP *
                 ]
         questevent.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua.cpp(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua.cpp(276): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua.cpp(301): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua.cpp(347): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua.cpp(373): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_affect.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_affect.cpp(138): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_arena.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_ba.cpp
         using native typeof
         questlua_building.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_danceevent.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_danceevent.cpp(17): warning C4805: '!=': unsichere Kombination von Typ 'BOOL' mit Typ 'bool' in einer Operation
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_dragonlair.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_dragonlair.cpp(14): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'long', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         Code wird generiert...
         Kompilieren...
         questlua_dragonsoul.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_dungeon.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_dungeon.cpp(632): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_dungeon.cpp(633): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_dungeon.cpp(634): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_dungeon.cpp(635): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_dungeon.cpp(837): warning C4244: 'Initialisierung': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_dungeon.cpp(969): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_dungeon.cpp(1383): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,_Ty>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=DWORD,
                     _Ty2=int,
                     _Ty=lua_Number,
                     _Other1=lua_Number,
                     _Other2=lua_Number
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questlua_dungeon.cpp(1393): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<lua_Number,lua_Number>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=DWORD,
                     _Ty2=int,
                     _Other1=lua_Number,
                     _Other2=lua_Number
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(127): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_forked.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_forked.cpp(105): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_forked.cpp(131): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_forked.cpp(138): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_game.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_global.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(372): warning C4805: '==': unsichere Kombination von Typ 'bool' mit Typ 'int' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(419): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1028): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1057): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1057): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1072): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1115): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1115): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1146): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1187): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1232): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1233): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1234): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1235): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1290): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1291): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1292): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1293): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1295): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1296): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1297): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_global.cpp(1298): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_guild.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_guild.cpp(393): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_horse.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_horse.cpp(72): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_horse.cpp(75): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_horse.cpp(227): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_horse.cpp(241): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_item.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_item.cpp(45): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_item.cpp(229): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'short', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_item.cpp(229): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_item.cpp(229): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_item.cpp(381): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_item.cpp(439): warning C4244: 'Initialisierung': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_marriage.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_marriage.cpp(196): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_marriage.cpp(273): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_marriage.cpp(294): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_mgmt.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_mgmt.cpp(28): warning C4244: 'Argument': Konvertierung von 'int64_t' in 'lua_Number', möglicher Datenverlust
         questlua_monarch.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_npc.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_npc.cpp(296): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_npc.cpp(314): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_npc.cpp(317): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_npc.cpp(327): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_npc.cpp(345): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_npc.cpp(348): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_oxevent.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_party.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_party.cpp(346): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_party.cpp(347): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_party.cpp(348): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_party.cpp(349): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_party.cpp(350): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_party.cpp(351): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'long', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_party.cpp(352): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_party.cpp(353): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_pc.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(857): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(1968): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(1968): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(1968): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(1968): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(2087): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(2156): warning C4805: '==': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(2331): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(2331): warning C4805: '!=': unsichere Kombination von Typ 'int' mit Typ 'bool' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pc.cpp(2596): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'const int', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_pet.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\petsystem.h(52): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pet.cpp(45): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pet.cpp(51): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pet.cpp(73): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pet.cpp(105): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_pet.cpp(125): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questlua_quest.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_quest.cpp(196): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'DWORD', möglicher Datenverlust
         questlua_speedserver.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(17): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(25): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(53): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(54): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(55): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(56): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(57): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(72): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(73): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(89): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(97): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(97): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(97): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(131): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(132): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(132): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(132): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(133): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(134): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(135): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(151): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(152): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(152): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(152): warning C4244: 'Argument': Konvertierung von 'lua_Number' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\questlua_speedserver.cpp(166): warning C4244: 'Initialisierung': Konvertierung von 'lua_Number' in 'BYTE', möglicher Datenverlust
         questlua_target.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questmanager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questpc.h(171): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::pair<std::string,DWORD>,LPEVENT,std::less<std::pair<std::string,DWORD>>,std::allocator<std::pair<const std::pair<std::string,DWORD>,LPEVENT>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(185): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::pair<std::string,DWORD>,
                     _Ty=LPEVENT
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<unsigned int,std::less<unsigned int>,std::allocator<char32_t>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(202): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=unsigned int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,unsigned int,std::less<std::string>,std::allocator<std::pair<const std::string,unsigned int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(204): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=unsigned int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<unsigned int,std::string,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,std::string>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(245): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=unsigned int,
                     _Ty=std::string
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<unsigned int,quest::NPC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(203): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=unsigned int,
                     _Ty=quest::NPC
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<unsigned int,quest::PC,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::PC>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(209): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=unsigned int,
                     _Ty=quest::PC
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,int>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,int>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,quest::CQuestManager::stringhash,std::equal_to<std::string>,std::allocator<std::pair<const std::string,int>>>,
                     Arg0=std::pair<const std::string,int>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const _Kty,_Ty>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,quest::CQuestManager::stringhash,std::equal_to<std::string>,std::allocator<std::pair<const std::string,int>>>,
                     _Kty=std::string,
                     _Ty=int,
                     Arg0=std::pair<const std::string,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T,H>::insert(const std::pair<const _Kty,_Ty> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=int,
                     H=quest::CQuestManager::stringhash,
                     _Kty=std::string,
                     _Ty=int
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questmanager.h(243): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T,H>".
                 with
                 [
                     K=std::string,
                     T=int,
                     H=quest::CQuestManager::stringhash
                 ]
         Code wird generiert...
         Kompilieren...
         questnpc.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\questnpc.cpp(60): warning C4996: 'strnicmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(248): Siehe Deklaration von 'strnicmp'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<unsigned int,quest::NPC::AQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AQuestScriptType>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questnpc.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=unsigned int,
                     _Ty=quest::NPC::AQuestScriptType
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<unsigned int,quest::NPC::AArgQuestScriptType,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::NPC::AArgQuestScriptType>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questnpc.h(102): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=unsigned int,
                     _Ty=quest::NPC::AArgQuestScriptType
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,quest::AStateScriptType,std::less<int>,std::allocator<std::pair<const int,quest::AStateScriptType>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questnpc.h(43): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=quest::AStateScriptType
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,std::vector<quest::AArgScript>,std::less<int>,std::allocator<std::pair<const int,std::vector<quest::AArgScript>>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questnpc.h(48): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=std::vector<quest::AArgScript>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const std::basic_string<_Elem,_Traits,_Ax> &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>,
                     _Elem=char,
                     _Traits=std::char_traits<char>,
                     _Ax=std::allocator<char>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,CProfiler::SProfileAccumData>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<std::string,boost::hash<std::string>,std::equal_to<std::string>,std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>>,
                     K=std::string,
                     Arg0=std::pair<const std::string,CProfiler::TProfileAccumData>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const std::string,CProfiler::TProfileAccumData>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\profiler.h(236): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=std::string,
                     T=CProfiler::TProfileAccumData
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         questpc.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<unsigned int,quest::QuestState,std::less<unsigned int>,std::allocator<std::pair<const unsigned int,quest::QuestState>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questpc.h(47): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=unsigned int,
                     _Ty=quest::QuestState
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,int,std::less<std::string>,std::allocator<std::pair<const std::string,int>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questpc.h(171): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,LPEVENT,std::less<std::string>,std::allocator<std::pair<const std::string,LPEVENT>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\questpc.h(176): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=LPEVENT
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         refine.cpp
         using native typeof
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,TRefineTable,std::less<DWORD>,std::allocator<std::pair<const DWORD,TRefineTable>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\refine.h(33): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=TRefineTable
                 ]
         regen.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         safebox.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\safebox.cpp(64): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\safebox.cpp(74): warning C4244: 'Argument': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\safebox.cpp(76): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\safebox.cpp(114): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\safebox.cpp(199): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         sectree.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPENTITY >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPENTITY >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPENTITY >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPENTITY >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPENTITY >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPENTITY >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CEntity *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPENTITY >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPENTITY >,std::equal_to<LPENTITY >,std::allocator<LPENTITY >>,
                     Arg0=CEntity *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CEntity*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPENTITY >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPENTITY >,std::equal_to<LPENTITY >,std::allocator<LPENTITY >>,
                     Arg0=CEntity *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CEntity *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPENTITY >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPENTITY
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree.h(203): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPENTITY
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         sectree_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(255): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(259): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(263): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(737): warning C4805: '==': unsichere Kombination von Typ 'bool' mit Typ 'int' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(782): warning C4805: '==': unsichere Kombination von Typ 'bool' mit Typ 'int' in einer Operation
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(944): warning C4244: '=': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(954): warning C4244: '=': Konvertierung von 'float' in 'int', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(1306): warning C4005: 'min': Makro-Neudefinition
                 c:\program files (x86)\microsoft sdks\windows\v7.0a\include\windef.h(194): Siehe vorherige Definition von 'min'
     1>d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(1307): warning C4005: 'max': Makro-Neudefinition
                 c:\program files (x86)\microsoft sdks\windows\v7.0a\include\windef.h(190): Siehe vorherige Definition von 'max'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE_MAP ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE_MAP >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(222): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE_MAP
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,TAreaInfo,std::less<std::string>,std::allocator<std::pair<const std::string,TAreaInfo>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(358): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=TAreaInfo
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<int,TAreaMap,std::less<int>,std::allocator<std::pair<const int,TAreaMap>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(223): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=int,
                     _Ty=TAreaMap
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,std::vector<npc_info>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::vector<npc_info>>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(225): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=std::vector<npc_info>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<VID,VID,std::less<VID>,std::allocator<std::pair<const VID,VID>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.cpp(1600): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=VID,
                     _Ty=VID
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const long,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const long,int>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const long,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const long,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const long,int>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const long,int>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const long &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const long,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<long,boost::hash<long>,std::equal_to<long>,std::allocator<std::pair<const long,int>>>,
                     Arg0=std::pair<const long,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,int>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const long,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<long,boost::hash<long>,std::equal_to<long>,std::allocator<std::pair<const long,int>>>,
                     K=long,
                     Arg0=std::pair<const long,int>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const long,int>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=long,
                     T=int
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(229): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=long,
                     T=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\dungeon.h(127): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         sequence.cpp
         using native typeof
         shop.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\shop.cpp(162): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\shop.cpp(294): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>d:\tt (1)\dev\srcs\server\game\src\shop.cpp(345): warning C4244: 'Argument': Konvertierung von 'WORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\shop.cpp(402): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const LPCHARACTER ,bool>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<LPCHARACTER ,boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<std::pair<const LPCHARACTER ,bool>>>,
                     Arg0=std::pair<const LPCHARACTER ,bool>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,_Ty2>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<LPCHARACTER ,boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<std::pair<const LPCHARACTER ,bool>>>,
                     K=LPCHARACTER,
                     Arg0=std::pair<const LPCHARACTER ,bool>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,_Ty2> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=LPCHARACTER,
                     T=bool
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\shop.h(72): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=LPCHARACTER,
                     T=bool
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         shop_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\shop_manager.cpp(300): warning C4244: '=': Konvertierung von 'DWORD' in 'BYTE', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\shop_manager.cpp(473): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(228): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(175): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<T>(int,T &) const".
                 with
                 [
                     T=DWORD
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\shop_manager.cpp(381): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::GetValue<DWORD>(const std::string &,int,T &) const".
                 with
                 [
                     T=DWORD
                 ]
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(228): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(175): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<T>(int,T &) const".
                 with
                 [
                     T=std::string
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\shop_manager.cpp(387): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::GetValue<std::string>(const std::string &,int,T &) const".
                 with
                 [
                     T=std::string
                 ]
     1>d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(228): warning C4018: '>=': Konflikt zwischen 'signed' und 'unsigned'
                 d:\tt (1)\dev\srcs\server\game\src\group_text_parse_tree.h(136): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::CGroupNodeRow::GetValue<T>(int,T &) const".
                 with
                 [
                     T=BYTE
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\shop_manager.cpp(442): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "bool CGroupNode::GetValue<BYTE>(size_t,const std::string &,T &) const".
                 with
                 [
                     T=BYTE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CShop *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CShop *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\shop_manager.h(33): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CShop *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(279): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,TShopTableEx,std::less<DWORD>,std::allocator<std::pair<const DWORD,TShopTableEx>>,true>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\shop_manager.cpp(516): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::multimap<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=TShopTableEx
                 ]
         shopEx.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\shopex.cpp(159): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
     1>d:\tt (1)\dev\srcs\server\game\src\shopex.cpp(195): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>d:\tt (1)\dev\srcs\server\game\src\shopex.cpp(216): warning C4146: Einem vorzeichenlosen Typ wurde ein unärer Minus-Operator zugewiesen. Das Ergebnis ist weiterhin vorzeichenlos.
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const LPCHARACTER ,bool>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<LPCHARACTER ,boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<std::pair<const LPCHARACTER ,bool>>>,
                     Arg0=std::pair<const LPCHARACTER ,bool>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,_Ty2>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<LPCHARACTER ,boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<std::pair<const LPCHARACTER ,bool>>>,
                     K=LPCHARACTER,
                     Arg0=std::pair<const LPCHARACTER ,bool>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,_Ty2> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const LPCHARACTER ,bool>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=LPCHARACTER,
                     T=bool
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\shop.h(72): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=LPCHARACTER,
                     T=bool
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         shutdown_manager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\shutdown_manager.cpp(90): warning C4018: '<': Konflikt zwischen 'signed' und 'unsigned'
         skill.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\skill.cpp(85): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\skill.cpp(343): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,CSkillProto *,std::less<DWORD>,std::allocator<std::pair<const DWORD,CSkillProto *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\skill.h(244): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=CSkillProto *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         skill_power.cpp
         using native typeof
         SpeedServer.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\speedserver.cpp(162): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\speedserver.cpp(166): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\speedserver.cpp(170): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\speedserver.cpp(174): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\speedserver.cpp(178): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\speedserver.cpp(182): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\speedserver.cpp(186): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>d:\tt (1)\dev\srcs\server\game\src\speedserver.cpp(190): warning C4996: 'stricmp': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details.
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h(246): Siehe Deklaration von 'stricmp'
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<Date,std::list<HME>,std::less<Date>,std::allocator<std::pair<const Date,std::list<HME>>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\speedserver.h(100): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=Date,
                     _Ty=std::list<HME>
                 ]
         start_position.cpp
         using native typeof
         target.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,std::list<LPEVENT>,std::less<DWORD>,std::allocator<std::pair<const DWORD,std::list<LPEVENT>>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\target.h(66): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=std::list<LPEVENT>
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         text_file_loader.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(368): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(385): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(386): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(403): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(404): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(405): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(422): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(423): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(424): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(425): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(448): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(449): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(450): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(451): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(467): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(468): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(469): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(485): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(486): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(487): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(488): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(505): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(506): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(507): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\text_file_loader.cpp(508): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<std::string,TTokenVector,std::less<std::string>,std::allocator<std::pair<const std::string,TTokenVector>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\text_file_loader.h(17): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=std::string,
                     _Ty=TTokenVector
                 ]
         threeway_war.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<int,std::less<int>,std::allocator<int>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\threeway_war.h(62): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=int
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<std::pair<const DWORD,DWORD>>,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(const unsigned long &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>>,
                     Arg0=std::pair<const DWORD,DWORD>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(336): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<std::pair<const K,unsigned long>>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::map<DWORD,boost::hash<unsigned long>,std::equal_to<DWORD>,std::allocator<std::pair<const DWORD,DWORD>>>,
                     K=DWORD,
                     Arg0=std::pair<const DWORD,DWORD>
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_map.hpp(334): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_map<K,T>::insert(const std::pair<const K,T> &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator<std::allocator<std::pair<const DWORD,DWORD>>,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     K=DWORD,
                     T=DWORD
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\threeway_war.h(66): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_map<K,T>".
                 with
                 [
                     K=DWORD,
                     T=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         TrafficProfiler.cpp
         using native typeof
         Code wird generiert...
         Kompilieren...
         trigger.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         utils.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\utils.cpp(175): warning C4244: 'Argument': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\utils.cpp(175): warning C4244: 'Argument': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\utils.cpp(176): warning C4244: '=': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\utils.cpp(178): warning C4244: 'return': Konvertierung von 'double' in 'float', möglicher Datenverlust
         vector.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\vector.cpp(13): warning C4244: 'Argument': Konvertierung von 'double' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\vector.cpp(51): warning C4244: 'Argument': Konvertierung von 'long' in 'float', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\vector.cpp(51): warning C4244: 'Argument': Konvertierung von 'long' in 'float', möglicher Datenverlust
         version.cpp
         war_map.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\guild.h(232): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_const_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_const_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>,
                     _Other1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_const_iterator<std::_Tree_val<std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\set(58): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tset_traits<DWORD,std::less<DWORD>,std::allocator<DWORD>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild.h(364): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::set<_Kty>".
                 with
                 [
                     _Kty=DWORD
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<long,SWarMapInfo *,std::less<long>,std::allocator<std::pair<const long,SWarMapInfo *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\war_map.h(165): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=long,
                     _Ty=TWarMapInfo *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<long,CWarMap *,std::less<long>,std::allocator<std::pair<const long,CWarMap *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\war_map.h(166): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=long,
                     _Ty=CWarMap *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\guild.h(361): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         wedding.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,marriage::WeddingMap *,std::less<DWORD>,std::allocator<std::pair<const DWORD,marriage::WeddingMap *>>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\wedding.h(76): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=marriage::WeddingMap *
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char_manager.h(127): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         xmas_event.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<std::_Tree_iterator<_Mytree>&,_Ty>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Ty=int,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(988): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<std::_Tree_iterator<_Mytree>&,int>(_Other1,_Other2 &&)".
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Mytree=std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>,
                     _Other1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>> &,
                     _Other2=int
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\xtree(944): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> std::_Tree<_Traits>::_Linsert(std::_Tree_nod<_Traits>::_Node *,bool)-Memberfunktion
                 with
                 [
                     _Ty1=std::_Tree_iterator<std::_Tree_val<std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>>>,
                     _Ty2=bool,
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\map(81): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Tree<_Traits>".
                 with
                 [
                     _Traits=std::_Tmap_traits<DWORD,LPSECTREE ,std::less<DWORD>,std::allocator<std::pair<const DWORD,LPSECTREE >>,false>
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\sectree_manager.h(101): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::map<_Kty,_Ty>".
                 with
                 [
                     _Kty=DWORD,
                     _Ty=LPSECTREE
                 ]
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         XTrapManager.cpp
         using native typeof
     1>d:\tt (1)\dev\srcs\server\game\src\horse_rider.h(50): warning C4800: 'const BYTE': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\affect_flag.h(32): warning C4800: 'unsigned long': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\game\src\char.h(1446): warning C4800: 'const DWORD': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(65): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(66): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\libsql\asyncsql.h(70): warning C4244: '=': Konvertierung von 'my_ulonglong' in 'uint32_t', möglicher Datenverlust
     1>d:\tt (1)\dev\srcs\server\game\src\packet.h(2286): warning C4244: '=': Konvertierung von 'DWORD' in 'WORD', möglicher Datenverlust
     1>c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(163): warning C4800: 'int': Variable wird auf booleschen Wert ('True' oder 'False') gesetzt (Auswirkungen auf Leistungsverhalten möglich)
                 c:\program files (x86)\microsoft visual studio 10.0\vc\include\utility(247): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::_Pair_base<_Ty1,_Ty2>::_Pair_base<_Ty,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     _Ty=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(248): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2>::pair<boost::unordered_detail::hash_iterator_base<A,G>,int>(_Other1 &&,_Other2 &&)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     A=std::allocator<LPCHARACTER >,
                     G=boost::unordered_detail::ungrouped,
                     _Other1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Other2=int
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\detail\unique.hpp(282): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace_impl<Arg0>(CHARACTER *const &,const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(328): Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::pair<_Ty1,_Ty2> boost::unordered_detail::hash_unique_table<T>::emplace<CHARACTER*>(const Arg0 &)".
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_iterator_base<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=boost::unordered_detail::set<boost::hash<LPCHARACTER >,std::equal_to<LPCHARACTER >,std::allocator<LPCHARACTER >>,
                     Arg0=CHARACTER *
                 ]
                 d:\tt (1)\dev\srcs\extern\include\boost\unordered\unordered_set.hpp(326): Bei der Kompilierung der  Klassen-template der std::pair<_Ty1,_Ty2> boost::unordered_set<T>::insert(CHARACTER *const &)-Memberfunktion
                 with
                 [
                     _Ty1=boost::unordered_detail::hash_const_iterator<std::allocator<LPCHARACTER >,boost::unordered_detail::ungrouped>,
                     _Ty2=bool,
                     T=LPCHARACTER
                 ]
                 d:\tt (1)\dev\srcs\server\game\src\char.h(1348): Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "boost::unordered_set<T>".
                 with
                 [
                     T=LPCHARACTER
                 ]
         Code wird generiert...
         C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\CL.exe /c /I"D:\tt (1)\dev\Srcs\Server\game\src\\" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../liblua/include" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../libmysql/6.0.2/win32" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../libdevil/" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../libxtrap/include" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../../Extern/include" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../../Extern" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../libserverkey" /I"D:\tt (1)\dev\Srcs\Server\game\src\../../../Extern/openssl/include" /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _CONSOLE /D __WIN32__ /D _CRT_SECURE_NO_WARNINGS /D _USE_32BIT_TIME_T /D _WIN32 /D _MBCS /Gm- /EHsc /RTC1 /MTd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Fo"D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\\" /Fd"D:\tt (1)\dev\Srcs\Server\game\src\..\game.pdb" /Gd /TC /analyze- /errorReport:prompt minilzo.c
         minilzo.c
       ManifestResourceCompile:
         C:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\bin\rc.exe /nologo /fo"D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\game.exe.embed.manifest.res" "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\game_manifest.rc" 
     1>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppBuild.targets(990,5): warning MSB8012: TargetPath(D:\tt (1)\dev\Srcs\Server\game\src\..\game.exe) entspricht nicht dem OutputFile-Eigenschaftswert (D:\tt (1)\dev\Srcs\Server\game\game_d.exe) von Linker. Das Projekt wird daher möglicherweise nicht ordnungsgemäß erstellt. Damit dieses Problem behoben werden kann, müssen die Eigenschaftswerte für $(OutDir), $(TargetName) und $(TargetExt) dem in %(Link.OutputFile) angegebenen Wert entsprechen.
     1>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppBuild.targets(992,5): warning MSB8012: TargetName(game) entspricht nicht dem OutputFile-Eigenschaftswert (game_d) von Linker. Das Projekt wird daher möglicherweise nicht ordnungsgemäß erstellt. Damit dieses Problem behoben werden kann, müssen die Eigenschaftswerte für $(OutDir), $(TargetName) und $(TargetExt) dem in %(Link.OutputFile) angegebenen Wert entsprechen.
       Link:
         C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\link.exe /ERRORREPORT:PROMPT /OUT:"D:\tt (1)\dev\Srcs\Server\game\src\..\game_d.exe" /INCREMENTAL /NOLOGO /LIBPATH:"D:\tt (1)\dev\Srcs\Server\game\src\../../libmysql/6.0.2/win32/lib" /LIBPATH:"D:\tt (1)\dev\Srcs\Server\game\src\../../libdevil/win32/lib" /LIBPATH:"D:\tt (1)\dev\Srcs\Server\game\src\../../../Extern/lib" /LIBPATH:"D:\tt (1)\dev\Srcs\Server\game\src\../../../Extern/openssl/lib" mysqlclient.lib ws2_32.lib "DevIL-1.7.8d.lib" "DevILU-1.7.8d.lib" "DevILUT-1.7.8d.lib" kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /ManifestFile:"D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\game.exe.intermediate.manifest" /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /DEBUG /PDB:"D:\tt (1)\dev\Srcs\Server\game\game.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:\tt (1)\dev\Srcs\Server\game\src\..\game.lib" /MACHINE:X86 "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\game.exe.embed.manifest.res"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\affect.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\ani.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\arena.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\auction_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\auth_brazil.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\banword.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\battle.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\BattleArena.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\blend_item.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\block_country.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\BlueDragon.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\BlueDragon_Binder.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\buff_on_attributes.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\buffer_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\building.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\castle.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_affect.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_battle.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_change_empire.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_dragonsoul.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_hackshield.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_horse.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_item.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_quickslot.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_resist.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_skill.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\char_state.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\cipher.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\ClientPackageCryptInfo.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\cmd.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\cmd_emotion.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\cmd_general.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\cmd_gm.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\cmd_oxevent.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\config.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\constants.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\crc32.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\cube.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\db.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\desc.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\desc_client.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\desc_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\desc_p2p.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\dev_log.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\dragon_soul_table.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\DragonLair.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\DragonSoul.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\dungeon.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\empire_text_convert.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\entity.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\entity_view.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\event.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\event_queue.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\exchange.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\file_loader.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\fishing.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\FSM.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\gm.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\group_text_parse_tree.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\guild.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\guild_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\guild_war.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\HackShield.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\HackShield_Impl.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\horse_rider.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\horsename_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\input.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\input_auth.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\input_db.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\input_login.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\input_main.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\input_p2p.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\input_teen.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\input_udp.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\ip_ban.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\item.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\item_addon.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\item_attribute.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\item_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\item_manager_idrange.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\item_manager_read_tables.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\locale.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\locale_service.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\log.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\login_data.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\lzo_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\main.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\map_location.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\MarkConvert.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\MarkImage.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\MarkManager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\marriage.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\matrix_card.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\messenger_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\minilzo.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\mining.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\mob_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\monarch.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\motion.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\over9refine.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\OXEvent.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\p2p.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\packet_info.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\panama.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\party.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\passpod.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\pcbang.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\PetSystem.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\polymorph.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\priv_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\pvp.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questevent.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_affect.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_arena.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_ba.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_building.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_danceevent.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_dragonlair.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_dragonsoul.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_dungeon.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_forked.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_game.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_global.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_guild.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_horse.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_item.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_marriage.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_mgmt.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_monarch.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_npc.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_oxevent.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_party.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_pc.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_pet.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_quest.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_speedserver.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questlua_target.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questmanager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questnpc.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\questpc.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\refine.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\regen.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\safebox.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\sectree.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\sectree_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\sequence.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\shop.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\shop_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\shopEx.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\shutdown_manager.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\skill.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\skill_power.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\SpeedServer.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\start_position.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\target.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\text_file_loader.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\threeway_war.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\TrafficProfiler.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\trigger.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\utils.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\vector.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\version.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\war_map.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\wedding.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\xmas_event.obj"
         "D:\tt (1)\dev\Srcs\Server\game\src\OBJDIR/Debug\XTrapManager.obj"
     1>LIBCMT.lib(invarg.obj) : error LNK2005: __initp_misc_invarg ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>LIBCMT.lib(invarg.obj) : error LNK2005: __call_reportfault ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>LIBCMT.lib(invarg.obj) : error LNK2005: __set_invalid_parameter_handler ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>LIBCMT.lib(invarg.obj) : error LNK2005: __get_invalid_parameter_handler ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>LIBCMT.lib(invarg.obj) : error LNK2005: __invoke_watson ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>LIBCMT.lib(invarg.obj) : error LNK2005: "void __cdecl _invoke_watson(unsigned short const *,unsigned short const *,unsigned short const *,unsigned int,unsigned int)" (?_invoke_watson@@YAXPBG00II@Z) ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>LIBCMT.lib(invarg.obj) : error LNK2005: __invalid_parameter ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>LIBCMT.lib(invarg.obj) : error LNK2005: "void __cdecl _invalid_parameter(unsigned short const *,unsigned short const *,unsigned short const *,unsigned int,unsigned int)" (?_invalid_parameter@@YAXPBG00II@Z) ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>LIBCMT.lib(invarg.obj) : error LNK2005: ___pInvalidArgHandler ist bereits in LIBCMTD.lib(invarg.obj) definiert.
     1>libcpmt.lib(stdhndlr.obj) : error LNK2038: Konflikt ermittelt für "_ITERATOR_DEBUG_LEVEL": Der Wert "0" stimmt nicht mit dem Wert "2" in affect.obj überein.
     1>LINK : warning LNK4098: Standardbibliothek "LIBCMT" steht in Konflikt mit anderen Bibliotheken; /NODEFAULTLIB:Bibliothek verwenden.
     1>xmas_event.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>XTrapManager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>trigger.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>utils.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>war_map.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>wedding.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>SpeedServer.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>target.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>text_file_loader.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>threeway_war.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>sectree_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>shop.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>shop_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questpc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>regen.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>safebox.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>sectree.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_speedserver.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_target.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questnpc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_forked.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_npc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questevent.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_building.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>questlua_danceevent.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>PetSystem.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>polymorph.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>priv_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>pvp.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>panama.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>party.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>passpod.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>mob_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>motion.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>OXEvent.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>MarkManager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "__sys_err" in Funktion ""public: __thiscall std::pair<unsigned long,struct CGuildMarkManager::TGuildSymbol>::~pair<unsigned long,struct CGuildMarkManager::TGuildSymbol>(void)" (??1?$pair@KUTGuildSymbol@CGuildMarkManager@@@std@@QAE@XZ)".
     1>marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>matrix_card.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>mining.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>log.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>MarkConvert.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>MarkImage.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>item_manager_idrange.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>item_manager_read_tables.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>locale.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>locale_service.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>item_addon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>item_attribute.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>item_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>input_login.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>input_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>input_udp.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>horsename_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>input.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>input_db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>group_text_parse_tree.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>guild_war.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>horse_rider.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>entity_view.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>event.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>exchange.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>fishing.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>dragon_soul_table.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>DragonLair.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>DragonSoul.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>desc_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>desc_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>cmd_emotion.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>cmd_gm.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>cube.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_state.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>ClientPackageCryptInfo.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>cmd.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_resist.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_dragonsoul.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char_hackshield.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>buff_on_attributes.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>building.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>castle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>char.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>BattleArena.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>blend_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>BlueDragon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>BlueDragon_Binder.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>ani.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>arena.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>auth_brazil.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "__sys_err".
     1>marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>party.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>pvp.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>safebox.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>item_attribute.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_MIN" in Funktion ""public: int __thiscall CItem::GetAttributeSetIndex(void)" (?GetAttributeSetIndex@CItem@@QAEHXZ)".
     1>item_manager_read_tables.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>fishing.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>input_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>cmd_gm.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>DragonSoul.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>char_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>char_skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>char_state.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>ani.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>char.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>char_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MIN".
     1>war_map.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>wedding.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>xmas_event.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>XTrapManager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>SpeedServer.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>target.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>text_file_loader.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>utils.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>shop.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>shop_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>shopEx.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>refine.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>regen.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>safebox.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>sectree_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_speedserver.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questnpc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questpc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_quest.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_forked.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_guild.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_sys_log" in Funktion ""int __cdecl quest::guild_is_war(struct lua_State *)" (?guild_is_war@quest@@YAHPAUlua_State@@@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questevent.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_arena.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>party.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>passpod.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>priv_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>pvp.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>motion.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>OXEvent.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>panama.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>matrix_card.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>messenger_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>mob_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>MarkConvert.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>MarkImage.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>MarkManager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>log.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>login_data.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>map_location.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>item_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>item_manager_idrange.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>item_manager_read_tables.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>locale_service.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>input_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>input_udp.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>input.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>input_db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>input_login.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>guild_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>guild_war.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>horse_rider.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>horsename_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>exchange.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>fishing.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>gm.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>desc_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>desc_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>DragonLair.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>cube.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>cmd_emotion.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>cmd_gm.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>config.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char_skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char_state.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>ClientPackageCryptInfo.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>cmd.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char_hackshield.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>building.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>arena.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>blend_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>BlueDragon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_sys_log".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_newtable(struct lua_State *)" (?lua_newtable@@YAXPAUlua_State@@@Z)".
     1>arena.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_newtable(struct lua_State *)" (?lua_newtable@@YAXPAUlua_State@@@Z)" in Funktion ""public: void __thiscall CArenaManager::GetDuelList(struct lua_State *)" (?GetDuelList@CArenaManager@@QAEXPAUlua_State@@@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_newtable(struct lua_State *)" (?lua_newtable@@YAXPAUlua_State@@@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_newtable(struct lua_State *)" (?lua_newtable@@YAXPAUlua_State@@@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_newtable(struct lua_State *)" (?lua_newtable@@YAXPAUlua_State@@@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_pet.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_quest.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_speedserver.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_target.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_npc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_oxevent.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_mgmt.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_game.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_building.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_dragonsoul.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_dungeon.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)" in Funktion ""int __cdecl quest::dungeon_set_flag(struct lua_State *)" (?dungeon_set_flag@quest@@YAHPAUlua_State@@@Z)".
     1>questlua_forked.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>arena.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_arena.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnumber(struct lua_State *,double)" (?lua_pushnumber@@YAXPAUlua_State@@N@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_rawseti(struct lua_State *,int,int)" (?lua_rawseti@@YAXPAUlua_State@@HH@Z)".
     1>arena.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_rawseti(struct lua_State *,int,int)" (?lua_rawseti@@YAXPAUlua_State@@HH@Z)" in Funktion ""protected: int __thiscall CArenaMap::GetDuelList(struct lua_State *,int)" (?GetDuelList@CArenaMap@@IAEHPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_rawseti(struct lua_State *,int,int)" (?lua_rawseti@@YAXPAUlua_State@@HH@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_rawseti(struct lua_State *,int,int)" (?lua_rawseti@@YAXPAUlua_State@@HH@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_rawseti(struct lua_State *,int,int)" (?lua_rawseti@@YAXPAUlua_State@@HH@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questlua_mgmt.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questlua_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>arena.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)" in Funktion ""protected: int __thiscall CArenaMap::GetDuelList(struct lua_State *,int)" (?GetDuelList@CArenaMap@@IAEHPAUlua_State@@H@Z)".
     1>BlueDragon_Binder.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>questlua_forked.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushstring(struct lua_State *,char const *)" (?lua_pushstring@@YAXPAUlua_State@@PBD@Z)".
     1>auth_brazil.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl socket_timeout(unsigned int,long,long)" (?socket_timeout@@YAXIJJ@Z)" in Funktion ""int __cdecl auth_brazil(char const *,char const *)" (?auth_brazil@@YAHPBD0@Z)".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl socket_timeout(unsigned int,long,long)" (?socket_timeout@@YAXIJJ@Z)".
     1>auth_brazil.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_socket_block" in Funktion ""int __cdecl auth_brazil(char const *,char const *)" (?auth_brazil@@YAHPBD0@Z)".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_block".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_block".
     1>auth_brazil.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_socket_connect" in Funktion ""int __cdecl auth_brazil(char const *,char const *)" (?auth_brazil@@YAHPBD0@Z)".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_connect".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_connect".
     1>passpod.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_connect".
     1>auth_brazil.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_MD5Final" in Funktion ""char const * __cdecl FN_md5(char const *)" (?FN_md5@@YAPBDPBD@Z)".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MD5Final".
     1>auth_brazil.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_MD5Update" in Funktion ""char const * __cdecl FN_md5(char const *)" (?FN_md5@@YAPBDPBD@Z)".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MD5Update".
     1>auth_brazil.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_MD5Init" in Funktion ""char const * __cdecl FN_md5(char const *)" (?FN_md5@@YAPBDPBD@Z)".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MD5Init".
     1>questlua_npc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>questnpc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_MAX" in Funktion ""protected: void __thiscall quest::NPC::LoadStateScript(int,char const *,char const *)" (?LoadStateScript@NPC@quest@@IAEXHPBD0@Z)".
     1>input_db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>party.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>priv_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>config.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>char_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>char_resist.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>char_state.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>buffer_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>char.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MAX".
     1>regen.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>sectree_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>threeway_war.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>questlua_forked.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>questlua_game.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>PetSystem.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>polymorph.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_number_ex" in Funktion ""public: __thiscall boost::unordered_detail::hash_buckets<class std::allocator<struct std::pair<unsigned long const ,unsigned long> >,struct boost::unordered_detail::ungrouped>::hash_buckets<class std::allocator<struct std::pair<unsigned long const ,unsigned long> >,struct boost::unordered_detail::ungrouped>(class std::allocator<class boost::unordered_detail::hash_node<class std::allocator<struct std::pair<unsigned long const ,unsigned long> >,struct boost::unordered_detail::ungrouped> > const &,unsigned int)" (??0?$hash_buckets@V?$allocator@U?$pair@$$CBKK@std@@@std@@Uungrouped@unordered_detail@boost@@@unordered_detail@boost@@QAE@ABV?$allocator@V?$hash_node@V?$allocator@U?$pair@$$CBKK@std@@@std@@Uungrouped@unordered_detail@boost@@@unordered_detail@boost@@@std@@I@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>mining.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>mob_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>OXEvent.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>party.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>item_addon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>item_attribute.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>item_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>fishing.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>input_db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>input_login.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>desc_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>DragonSoul.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>empire_text_convert.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>char_state.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>cmd_gm.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>cube.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>char_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>char_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>char_resist.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>char_skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>castle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>char.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>char_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>BattleArena.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>blend_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>BlueDragon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_number_ex".
     1>party.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>PetSystem.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>pvp.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>war_map.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>login_data.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>mob_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>packet_info.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>desc_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>fishing.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>char_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>char_skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>char_state.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>BlueDragon.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_get_dword_time" in Funktion ""int __cdecl BlueDragon_StateBattle(class CHARACTER *)" (?BlueDragon_StateBattle@@YAHPAVCHARACTER@@@Z)".
     1>char.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>char_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_get_dword_time".
     1>questlua_target.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_pet.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_quest.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)" in Funktion ""int __cdecl quest::quest_start(struct lua_State *)" (?quest_start@quest@@YAHPAUlua_State@@@Z)".
     1>questlua_speedserver.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_npc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_oxevent.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_mgmt.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_forked.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_game.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_ba.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_building.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_dragonlair.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>BlueDragon_Binder.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_arena.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl lua_tonumber(struct lua_State *,int)" (?lua_tonumber@@YANPAUlua_State@@H@Z)".
     1>questlua_speedserver.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_target.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_pet.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_quest.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_mgmt.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_npc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_oxevent.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_building.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_game.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>BlueDragon_Binder.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)" in Funktion ""unsigned int __cdecl BlueDragon_GetSkillFactor(unsigned int,...)" (?BlueDragon_GetSkillFactor@@YAIIZZ)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>questlua_ba.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isnumber(struct lua_State *,int)" (?lua_isnumber@@YAHPAUlua_State@@H@Z)".
     1>BlueDragon_Binder.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_settop(struct lua_State *,int)" (?lua_settop@@YAXPAUlua_State@@H@Z)" in Funktion ""unsigned int __cdecl BlueDragon_GetSkillFactor(unsigned int,...)" (?BlueDragon_GetSkillFactor@@YAIIZZ)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_settop(struct lua_State *,int)" (?lua_settop@@YAXPAUlua_State@@H@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_settop(struct lua_State *,int)" (?lua_settop@@YAXPAUlua_State@@H@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_type(struct lua_State *,int)" (?lua_type@@YAHPAUlua_State@@H@Z)".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_type(struct lua_State *,int)" (?lua_type@@YAHPAUlua_State@@H@Z)".
     1>questlua_pet.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_type(struct lua_State *,int)" (?lua_type@@YAHPAUlua_State@@H@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_type(struct lua_State *,int)" (?lua_type@@YAHPAUlua_State@@H@Z)".
     1>BlueDragon_Binder.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_type(struct lua_State *,int)" (?lua_type@@YAHPAUlua_State@@H@Z)" in Funktion ""unsigned int __cdecl BlueDragon_GetSkillFactor(unsigned int,...)" (?BlueDragon_GetSkillFactor@@YAIIZZ)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_type(struct lua_State *,int)" (?lua_type@@YAHPAUlua_State@@H@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_type(struct lua_State *,int)" (?lua_type@@YAHPAUlua_State@@H@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_type(struct lua_State *,int)" (?lua_type@@YAHPAUlua_State@@H@Z)".
     1>BlueDragon_Binder.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_gettable(struct lua_State *,int)" (?lua_gettable@@YAXPAUlua_State@@H@Z)" in Funktion ""unsigned int __cdecl BlueDragon_GetSkillFactor(unsigned int,...)" (?BlueDragon_GetSkillFactor@@YAIIZZ)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_gettable(struct lua_State *,int)" (?lua_gettable@@YAXPAUlua_State@@H@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_gettable(struct lua_State *,int)" (?lua_gettable@@YAXPAUlua_State@@H@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)".
     1>questlua_npc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)".
     1>questlua_quest.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)".
     1>BlueDragon_Binder.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)" in Funktion ""unsigned int __cdecl BlueDragon_GetSkillFactor(unsigned int,...)" (?BlueDragon_GetSkillFactor@@YAIIZZ)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)".
     1>questlua_game.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_gettop(struct lua_State *)" (?lua_gettop@@YAHPAUlua_State@@@Z)".
     1>BlueDragon_Binder.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_rawgeti(struct lua_State *,int,int)" (?lua_rawgeti@@YAXPAUlua_State@@HH@Z)" in Funktion ""unsigned int __cdecl BlueDragon_GetRangeFactor(char const *,int)" (?BlueDragon_GetRangeFactor@@YAIPBDH@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_rawgeti(struct lua_State *,int,int)" (?lua_rawgeti@@YAXPAUlua_State@@HH@Z)".
     1>BlueDragon_Binder.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaL_getn(struct lua_State *,int)" (?luaL_getn@@YAHPAUlua_State@@H@Z)" in Funktion ""unsigned int __cdecl BlueDragon_GetRangeFactor(char const *,int)" (?BlueDragon_GetRangeFactor@@YAIPBDH@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl luaL_getn(struct lua_State *,int)" (?luaL_getn@@YAHPAUlua_State@@H@Z)".
     1>buffer_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""struct buffer * __cdecl buffer_new(int)" (?buffer_new@@YAPAUbuffer@@H@Z)" in Funktion ""public: __thiscall TEMP_BUFFER::TEMP_BUFFER(int,bool)" (??0TEMP_BUFFER@@QAE@H_N@Z)".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""struct buffer * __cdecl buffer_new(int)" (?buffer_new@@YAPAUbuffer@@H@Z)".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""struct buffer * __cdecl buffer_new(int)" (?buffer_new@@YAPAUbuffer@@H@Z)".
     1>desc_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""struct buffer * __cdecl buffer_new(int)" (?buffer_new@@YAPAUbuffer@@H@Z)".
     1>buffer_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl buffer_delete(struct buffer *)" (?buffer_delete@@YAXPAUbuffer@@@Z)" in Funktion ""public: __thiscall TEMP_BUFFER::~TEMP_BUFFER(void)" (??1TEMP_BUFFER@@QAE@XZ)".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl buffer_delete(struct buffer *)" (?buffer_delete@@YAXPAUbuffer@@@Z)".
     1>buffer_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void const * __cdecl buffer_read_peek(struct buffer *)" (?buffer_read_peek@@YAPBXPAUbuffer@@@Z)" in Funktion ""public: void const * __thiscall TEMP_BUFFER::read_peek(void)" (?read_peek@TEMP_BUFFER@@QAEPBXXZ)".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void const * __cdecl buffer_read_peek(struct buffer *)" (?buffer_read_peek@@YAPBXPAUbuffer@@@Z)".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void const * __cdecl buffer_read_peek(struct buffer *)" (?buffer_read_peek@@YAPBXPAUbuffer@@@Z)".
     1>buffer_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl buffer_write(struct buffer * &,void const *,int)" (?buffer_write@@YAXAAPAUbuffer@@PBXH@Z)" in Funktion ""public: void __thiscall TEMP_BUFFER::write(void const *,int)" (?write@TEMP_BUFFER@@QAEXPBXH@Z)".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl buffer_write(struct buffer * &,void const *,int)" (?buffer_write@@YAXAAPAUbuffer@@PBXH@Z)".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl buffer_write(struct buffer * &,void const *,int)" (?buffer_write@@YAXAAPAUbuffer@@PBXH@Z)".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl buffer_write(struct buffer * &,void const *,int)" (?buffer_write@@YAXAAPAUbuffer@@PBXH@Z)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""unsigned long __cdecl buffer_size(struct buffer *)" (?buffer_size@@YAKPAUbuffer@@@Z)".
     1>buffer_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""unsigned long __cdecl buffer_size(struct buffer *)" (?buffer_size@@YAKPAUbuffer@@@Z)" in Funktion ""public: int __thiscall TEMP_BUFFER::size(void)" (?size@TEMP_BUFFER@@QAEHXZ)".
     1>desc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""unsigned long __cdecl buffer_size(struct buffer *)" (?buffer_size@@YAKPAUbuffer@@@Z)".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""unsigned long __cdecl buffer_size(struct buffer *)" (?buffer_size@@YAKPAUbuffer@@@Z)".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""unsigned long __cdecl buffer_size(struct buffer *)" (?buffer_size@@YAKPAUbuffer@@@Z)".
     1>buffer_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl buffer_reset(struct buffer *)" (?buffer_reset@@YAXPAUbuffer@@@Z)" in Funktion ""public: void __thiscall TEMP_BUFFER::reset(void)" (?reset@TEMP_BUFFER@@QAEXXZ)".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl buffer_reset(struct buffer *)" (?buffer_reset@@YAXPAUbuffer@@@Z)".
     1>desc_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl buffer_reset(struct buffer *)" (?buffer_reset@@YAXPAUbuffer@@@Z)".
     1>target.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>priv_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>item_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>item_manager_read_tables.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_MINMAX" in Funktion ""public: bool __thiscall ITEM_MANAGER::ReadCommonDropItemFile(char const *)" (?ReadCommonDropItemFile@ITEM_MANAGER@@QAE_NPBD@Z)".
     1>marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>mining.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>horse_rider.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>input.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>item_addon.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>cmd_gm.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>config.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>fishing.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>castle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>char.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>char_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_MINMAX".
     1>char.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_get_float_time" in Funktion ""protected: void __thiscall CHARACTER::Initialize(void)" (?Initialize@CHARACTER@@IAEXXZ)".
     1>char.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: double __thiscall CPoly::Eval(void)" (?Eval@CPoly@@QAENXZ)" in Funktion ""public: void __thiscall CHARACTER::ComputePoints(void)" (?ComputePoints@CHARACTER@@QAEXXZ)".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: double __thiscall CPoly::Eval(void)" (?Eval@CPoly@@QAENXZ)".
     1>char_skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: double __thiscall CPoly::Eval(void)" (?Eval@CPoly@@QAENXZ)".
     1>guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: double __thiscall CPoly::Eval(void)" (?Eval@CPoly@@QAENXZ)".
     1>char.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_heart".
     1>event.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_heart".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_heart".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_heart".
     1>monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>shop_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>exchange.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>char.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_thecore_pulse" in Funktion ""public: void __thiscall CHARACTER::ReqSafeboxLoad(char const *)" (?ReqSafeboxLoad@CHARACTER@@QAEXPBD@Z)".
     1>char_battle.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>char_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>char_state.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_pulse".
     1>char_item.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_core_dump_unix" in Funktion ""public: void __thiscall CHARACTER::SetItem(struct SItemPos,class CItem *)" (?SetItem@CHARACTER@@QAEXUSItemPos@@PAVCItem@@@Z)".
     1>char_item.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_under_han" in Funktion ""public: bool __thiscall CHARACTER::UseItemEx(class CItem *,struct SItemPos)" (?UseItemEx@CHARACTER@@QAE_NPAVCItem@@USItemPos@@@Z)".
     1>cmd_general.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_under_han".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_under_han".
     1>char_skill.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: int __thiscall CPoly::SetVar(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double)" (?SetVar@CPoly@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z)" in Funktion ""public: int __thiscall CHARACTER::ComputeSkillAtPosition(unsigned long,struct pixel_position_s const &,unsigned char)" (?ComputeSkillAtPosition@CHARACTER@@QAEHKABUpixel_position_s@@E@Z)".
     1>guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: int __thiscall CPoly::SetVar(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double)" (?SetVar@CPoly@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z)".
     1>skill.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: int __thiscall CPoly::SetVar(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,double)" (?SetVar@CPoly@@QAEHABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z)".
     1>char_skill.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: double __thiscall CPoly::GetVar(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?GetVar@CPoly@@QAENABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)" in Funktion ""public: int __thiscall CHARACTER::ComputeSkill(unsigned long,class CHARACTER *,unsigned char)" (?ComputeSkill@CHARACTER@@QAEHKPAV1@E@Z)".
     1>ClientPackageCryptInfo.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_closedir" in Funktion ""public: bool __thiscall CClientPackageCryptInfo::LoadPackageCryptInfo(char const *)" (?LoadPackageCryptInfo@CClientPackageCryptInfo@@QAE_NPBD@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_closedir".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_closedir".
     1>questnpc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_closedir".
     1>ClientPackageCryptInfo.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_readdir" in Funktion ""public: bool __thiscall CClientPackageCryptInfo::LoadPackageCryptInfo(char const *)" (?LoadPackageCryptInfo@CClientPackageCryptInfo@@QAE_NPBD@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_readdir".
     1>questnpc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_readdir".
     1>ClientPackageCryptInfo.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_opendir" in Funktion ""public: bool __thiscall CClientPackageCryptInfo::LoadPackageCryptInfo(char const *)" (?LoadPackageCryptInfo@CClientPackageCryptInfo@@QAE_NPBD@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_opendir".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_opendir".
     1>questnpc.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_opendir".
     1>mob_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_shutdown".
     1>cmd_general.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_thecore_shutdown" in Funktion ""void __cdecl Shutdown(int)" (?Shutdown@@YAXH@Z)".
     1>input_db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_shutdown".
     1>item_manager_idrange.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_shutdown".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_shutdown".
     1>cmd_gm.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaL_loadbuffer(struct lua_State *,char const *,unsigned int,char const *)" (?luaL_loadbuffer@@YAHPAUlua_State@@PBDI1@Z)" in Funktion ""void __cdecl do_priv_guild(class CHARACTER *,char const *,int,int)" (?do_priv_guild@@YAXPAVCHARACTER@@PBDHH@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl luaL_loadbuffer(struct lua_State *,char const *,unsigned int,char const *)" (?luaL_loadbuffer@@YAHPAUlua_State@@PBDI1@Z)".
     1>config.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_log_set_expiration_days" in Funktion ""void __cdecl config_init(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?config_init@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>config.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_parse_token" in Funktion ""void __cdecl config_init(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?config_init@@YAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: virtual __thiscall CAsyncSQL::~CAsyncSQL(void)" (??1CAsyncSQL@@UAE@XZ)" in Funktion "__unwindfunclet$??0DBManager@@QAE@XZ$0".
     1>log.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: virtual __thiscall CAsyncSQL::~CAsyncSQL(void)" (??1CAsyncSQL@@UAE@XZ)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: virtual __thiscall CAsyncSQL::~CAsyncSQL(void)" (??1CAsyncSQL@@UAE@XZ)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CAsyncSQL::CAsyncSQL(void)" (??0CAsyncSQL@@QAE@XZ)" in Funktion ""public: __thiscall DBManager::DBManager(void)" (??0DBManager@@QAE@XZ)".
     1>log.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: __thiscall CAsyncSQL::CAsyncSQL(void)" (??0CAsyncSQL@@QAE@XZ)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: bool __thiscall CAsyncSQL::Setup(char const *,char const *,char const *,char const *,char const *,bool,int)" (?Setup@CAsyncSQL@@QAE_NPBD0000_NH@Z)" in Funktion ""public: bool __thiscall DBManager::Connect(char const *,int,char const *,char const *,char const *)" (?Connect@DBManager@@QAE_NPBDH000@Z)".
     1>log.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: bool __thiscall CAsyncSQL::Setup(char const *,char const *,char const *,char const *,char const *,bool,int)" (?Setup@CAsyncSQL@@QAE_NPBD0000_NH@Z)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CAsyncSQL::AsyncQuery(char const *)" (?AsyncQuery@CAsyncSQL@@QAEXPBD@Z)" in Funktion ""public: void __cdecl DBManager::Query(char const *,...)" (?Query@DBManager@@QAAXPBDZZ)".
     1>log.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: void __thiscall CAsyncSQL::AsyncQuery(char const *)" (?AsyncQuery@CAsyncSQL@@QAEXPBD@Z)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: struct _SQLMsg * __thiscall CAsyncSQL::DirectQuery(char const *)" (?DirectQuery@CAsyncSQL@@QAEPAU_SQLMsg@@PBD@Z)" in Funktion ""public: struct _SQLMsg * __cdecl DBManager::DirectQuery(char const *,...)" (?DirectQuery@DBManager@@QAAPAU_SQLMsg@@PBDZZ)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CAsyncSQL::ReturnQuery(char const *,void *)" (?ReturnQuery@CAsyncSQL@@QAEXPBDPAX@Z)" in Funktion ""public: void __cdecl DBManager::ReturnQuery(int,unsigned long,void *,char const *,...)" (?ReturnQuery@DBManager@@QAAXHKPAXPBDZZ)".
     1>guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: void __thiscall CAsyncSQL::ReturnQuery(char const *,void *)" (?ReturnQuery@CAsyncSQL@@QAEXPBDPAX@Z)".
     1>guild_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: void __thiscall CAsyncSQL::ReturnQuery(char const *,void *)" (?ReturnQuery@CAsyncSQL@@QAEXPBDPAX@Z)".
     1>messenger_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: void __thiscall CAsyncSQL::ReturnQuery(char const *,void *)" (?ReturnQuery@CAsyncSQL@@QAEXPBDPAX@Z)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: bool __thiscall CAsyncSQL::PopResult(struct _SQLMsg * *)" (?PopResult@CAsyncSQL@@QAE_NPAPAU_SQLMsg@@@Z)" in Funktion ""private: struct _SQLMsg * __thiscall DBManager::PopResult(void)" (?PopResult@DBManager@@AAEPAU_SQLMsg@@XZ)".
     1>p2p.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_trim_and_lower" in Funktion ""public: void __thiscall P2P_MANAGER::Boot(class DESC *)" (?Boot@P2P_MANAGER@@QAEXPAVDESC@@@Z)".
     1>db.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_trim_and_lower".
     1>fishing.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_trim_and_lower".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_trim_and_lower".
     1>input_login.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_trim_and_lower".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: unsigned int __thiscall CAsyncSQL::EscapeString(char *,unsigned int,char const *,unsigned int)" (?EscapeString@CAsyncSQL@@QAEIPADIPBDI@Z)" in Funktion ""public: unsigned int __thiscall DBManager::EscapeString(char *,unsigned int,char const *,unsigned int)" (?EscapeString@DBManager@@QAEIPADIPBDI@Z)".
     1>log.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: unsigned int __thiscall CAsyncSQL::EscapeString(char *,unsigned int,char const *,unsigned int)" (?EscapeString@CAsyncSQL@@QAEIPADIPBDI@Z)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: bool __thiscall CAsyncSQL::QueryLocaleSet(void)" (?QueryLocaleSet@CAsyncSQL@@QAE_NXZ)" in Funktion ""public: void __thiscall AccountDB::SetLocale(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?SetLocale@AccountDB@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CAsyncSQL2::SetLocale(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?SetLocale@CAsyncSQL2@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)" in Funktion ""public: void __thiscall AccountDB::SetLocale(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?SetLocale@AccountDB@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_close".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_close".
     1>passpod.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_close".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_socket_close" in Funktion ""public: virtual void __thiscall DESC::Destroy(void)" (?Destroy@DESC@@UAEXXZ)".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_close".
     1>desc_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_close".
     1>desc_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_close".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch_del_fd" in Funktion ""public: virtual void __thiscall DESC::Destroy(void)" (?Destroy@DESC@@UAEXXZ)".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch_del_fd".
     1>desc_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch_del_fd".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch_add_fd" in Funktion ""public: bool __thiscall DESC::Setup(struct fdwatch *,unsigned int,struct sockaddr_in const &,unsigned long,unsigned long)" (?Setup@DESC@@QAE_NPAUfdwatch@@IABUsockaddr_in@@KK@Z)".
     1>desc_client.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch_add_fd".
     1>desc_p2p.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch_add_fd".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch_add_fd".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl buffer_read_proceed(struct buffer *,int)" (?buffer_read_proceed@@YAXPAUbuffer@@H@Z)" in Funktion ""public: int __thiscall DESC::ProcessInput(void)" (?ProcessInput@DESC@@QAEHXZ)".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl buffer_write_proceed(struct buffer *,int)" (?buffer_write_proceed@@YAXPAUbuffer@@H@Z)" in Funktion ""public: int __thiscall DESC::ProcessInput(void)" (?ProcessInput@DESC@@QAEHXZ)".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl buffer_write_proceed(struct buffer *,int)" (?buffer_write_proceed@@YAXPAUbuffer@@H@Z)".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_socket_read" in Funktion ""public: int __thiscall DESC::ProcessInput(void)" (?ProcessInput@DESC@@QAEHXZ)".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_read".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void * __cdecl buffer_write_peek(struct buffer *)" (?buffer_write_peek@@YAPAXPAUbuffer@@@Z)" in Funktion ""public: int __thiscall DESC::ProcessInput(void)" (?ProcessInput@DESC@@QAEHXZ)".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void * __cdecl buffer_write_peek(struct buffer *)" (?buffer_write_peek@@YAPAXPAUbuffer@@@Z)".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl buffer_has_space(struct buffer *)" (?buffer_has_space@@YAHPAUbuffer@@@Z)" in Funktion ""public: int __thiscall DESC::ProcessInput(void)" (?ProcessInput@DESC@@QAEHXZ)".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl buffer_adjust_size(struct buffer * &,int)" (?buffer_adjust_size@@YAXAAPAUbuffer@@H@Z)" in Funktion ""public: int __thiscall DESC::ProcessInput(void)" (?ProcessInput@DESC@@QAEHXZ)".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_socket_write" in Funktion ""public: int __thiscall DESC::ProcessOutput(void)" (?ProcessOutput@DESC@@QAEHXZ)".
     1>input_auth.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_write".
     1>passpod.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_socket_write".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch_get_buffer_size" in Funktion ""public: int __thiscall DESC::ProcessOutput(void)" (?ProcessOutput@DESC@@QAEHXZ)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch_get_buffer_size".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch_check_event" in Funktion ""public: void __thiscall DESC::FlushOutput(void)" (?FlushOutput@DESC@@QAEXXZ)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch_check_event".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch_get_client_data" in Funktion ""public: void __thiscall DESC::FlushOutput(void)" (?FlushOutput@DESC@@QAEXXZ)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch_get_client_data".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch" in Funktion ""public: void __thiscall DESC::FlushOutput(void)" (?FlushOutput@DESC@@QAEXXZ)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_fdwatch".
     1>desc.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl gettimeofday(struct timeval *,struct timezone *)" (?gettimeofday@@YAXPAUtimeval@@PAUtimezone@@@Z)" in Funktion ""public: void __thiscall DESC::FlushOutput(void)" (?FlushOutput@DESC@@QAEXXZ)".
     1>dev_log.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl gettimeofday(struct timeval *,struct timezone *)" (?gettimeofday@@YAXPAUtimeval@@PAUtimezone@@@Z)".
     1>input_main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl gettimeofday(struct timeval *,struct timezone *)" (?gettimeofday@@YAXPAUtimeval@@PAUtimezone@@@Z)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl gettimeofday(struct timeval *,struct timezone *)" (?gettimeofday@@YAXPAUtimeval@@PAUtimezone@@@Z)".
     1>desc_client.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_thecore_is_shutdowned" in Funktion ""public: bool __thiscall CLIENT_DESC::IsRetryWhenClosed(void)" (?IsRetryWhenClosed@CLIENT_DESC@@QAE_NXZ)".
     1>desc_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_thecore_random" in Funktion ""public: unsigned long __thiscall DESC_MANAGER::CreateHandshake(void)" (?CreateHandshake@DESC_MANAGER@@QAEKXZ)".
     1>matrix_card.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_random".
     1>threeway_war.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_random".
     1>utils.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_random".
     1>desc_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_socket_accept" in Funktion ""public: class DESC * __thiscall DESC_MANAGER::AcceptDesc(struct fdwatch *,unsigned int)" (?AcceptDesc@DESC_MANAGER@@QAEPAVDESC@@PAUfdwatch@@I@Z)".
     1>DragonSoul.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fnumber" in Funktion ""int __cdecl Gamble(class std::vector<float,class std::allocator<float> > &)" (?Gamble@@YAHAAV?$vector@MV?$allocator@M@std@@@std@@@Z)".
     1>exchange.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::CGrid(int,int)" (??0CGrid@@QAE@HH@Z)" in Funktion ""public: __thiscall CExchange::CExchange(class CHARACTER *)" (??0CExchange@@QAE@PAVCHARACTER@@@Z)".
     1>safebox.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::CGrid(int,int)" (??0CGrid@@QAE@HH@Z)".
     1>shop.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::CGrid(int,int)" (??0CGrid@@QAE@HH@Z)".
     1>shop_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::CGrid(int,int)" (??0CGrid@@QAE@HH@Z)".
     1>exchange.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::~CGrid(void)" (??1CGrid@@QAE@XZ)" in Funktion ""public: void * __thiscall CGrid::`scalar deleting destructor'(unsigned int)" (??_GCGrid@@QAEPAXI@Z)".
     1>safebox.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::~CGrid(void)" (??1CGrid@@QAE@XZ)".
     1>shop.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::~CGrid(void)" (??1CGrid@@QAE@XZ)".
     1>shop_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::~CGrid(void)" (??1CGrid@@QAE@XZ)".
     1>exchange.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: bool __thiscall CGrid::Put(int,int,int)" (?Put@CGrid@@QAE_NHHH@Z)" in Funktion ""public: bool __thiscall CExchange::AddItem(struct SItemPos,unsigned char)" (?AddItem@CExchange@@QAE_NUSItemPos@@E@Z)".
     1>safebox.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: bool __thiscall CGrid::Put(int,int,int)" (?Put@CGrid@@QAE_NHHH@Z)".
     1>shop.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: bool __thiscall CGrid::Put(int,int,int)" (?Put@CGrid@@QAE_NHHH@Z)".
     1>shop_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: bool __thiscall CGrid::Put(int,int,int)" (?Put@CGrid@@QAE_NHHH@Z)".
     1>exchange.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: bool __thiscall CGrid::IsEmpty(int,int,int)" (?IsEmpty@CGrid@@QAE_NHHH@Z)" in Funktion ""public: bool __thiscall CExchange::AddItem(struct SItemPos,unsigned char)" (?AddItem@CExchange@@QAE_NUSItemPos@@E@Z)".
     1>safebox.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: bool __thiscall CGrid::IsEmpty(int,int,int)" (?IsEmpty@CGrid@@QAE_NHHH@Z)".
     1>shop.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: bool __thiscall CGrid::IsEmpty(int,int,int)" (?IsEmpty@CGrid@@QAE_NHHH@Z)".
     1>exchange.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CGrid::Get(int,int,int)" (?Get@CGrid@@QAEXHHH@Z)" in Funktion ""public: bool __thiscall CExchange::RemoveItem(unsigned char)" (?RemoveItem@CExchange@@QAE_NE@Z)".
     1>safebox.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: void __thiscall CGrid::Get(int,int,int)" (?Get@CGrid@@QAEXHHH@Z)".
     1>exchange.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: int __thiscall CGrid::FindBlank(int,int)" (?FindBlank@CGrid@@QAEHHH@Z)" in Funktion ""private: bool __thiscall CExchange::CheckSpace(void)" (?CheckSpace@CExchange@@AAE_NXZ)".
     1>shop.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: int __thiscall CGrid::FindBlank(int,int)" (?FindBlank@CGrid@@QAEHHH@Z)".
     1>shop_manager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: int __thiscall CGrid::FindBlank(int,int)" (?FindBlank@CGrid@@QAEHHH@Z)".
     1>exchange.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CGrid::Clear(void)" (?Clear@CGrid@@QAEXXZ)" in Funktion ""private: bool __thiscall CExchange::CheckSpace(void)" (?CheckSpace@CExchange@@AAE_NXZ)".
     1>shop.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""public: void __thiscall CGrid::Clear(void)" (?Clear@CGrid@@QAEXXZ)".
     1>input_db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_signal_timer_enable" in Funktion ""protected: void __thiscall CInputDB::Boot(char const *)" (?Boot@CInputDB@@IAEXPBD@Z)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_signal_timer_enable".
     1>input_db.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_signal_timer_disable" in Funktion ""protected: void __thiscall CInputDB::Boot(char const *)" (?Boot@CInputDB@@IAEXPBD@Z)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_signal_timer_disable".
     1>input_main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_timediff" in Funktion ""protected: int __thiscall CInputMain::SyncPosition(class CHARACTER *,char const *,unsigned int)" (?SyncPosition@CInputMain@@IAEHPAVCHARACTER@@PBDI@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: unsigned long __thiscall CAsyncSQL::CountQuery(void)" (?CountQuery@CAsyncSQL@@QAEKXZ)" in Funktion ""public: unsigned long __thiscall DBManager::CountQuery(void)" (?CountQuery@DBManager@@QAEKXZ)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: static struct Security::Buffer __cdecl Security::RSACrypto::DecryptPublic(class Security::RSACrypto::PublicKey const *,unsigned char const *,int)" (?DecryptPublic@RSACrypto@Security@@SA?AUBuffer@2@PBVPublicKey@12@PBEH@Z)" in Funktion ""bool __cdecl CheckServerKey(char const *,char const *,char const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)" (?CheckServerKey@@YA_NPBD00AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall Security::RSACrypto::PublicKey::~PublicKey(void)" (??1PublicKey@RSACrypto@Security@@QAE@XZ)" in Funktion ""bool __cdecl CheckServerKey(char const *,char const *,char const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)" (?CheckServerKey@@YA_NPBD00AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: static bool __cdecl Security::RSACrypto::RestorePublicKey(char const *,unsigned int,class Security::RSACrypto::PublicKey *)" (?RestorePublicKey@RSACrypto@Security@@SA_NPBDIPAVPublicKey@12@@Z)" in Funktion ""bool __cdecl CheckServerKey(char const *,char const *,char const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)" (?CheckServerKey@@YA_NPBD00AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall Security::RSACrypto::PublicKey::PublicKey(void)" (??0PublicKey@RSACrypto@Security@@QAE@XZ)" in Funktion ""bool __cdecl CheckServerKey(char const *,char const *,char const *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)" (?CheckServerKey@@YA_NPBD00AAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_socket_tcp_bind" in Funktion ""int __cdecl start(int,char * *)" (?start@@YAHHPAPAD@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch_new" in Funktion ""int __cdecl start(int,char * *)" (?start@@YAHHPAPAD@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_thecore_init" in Funktion ""int __cdecl start(int,char * *)" (?start@@YAHHPAPAD@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_log_set_level" in Funktion ""int __cdecl start(int,char * *)" (?start@@YAHHPAPAD@Z)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int optreset" (?optreset@@3HA)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int optind" (?optind@@3HA)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl getopt(int,char * * const,char *)" (?getopt@@YAHHQAPADPAD@Z)" in Funktion ""int __cdecl start(int,char * *)" (?start@@YAHHPAPAD@Z)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_thecore_destroy" in Funktion ""void __cdecl destroy(void)" (?destroy@@YAXXZ)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch_delete" in Funktion ""void __cdecl destroy(void)" (?destroy@@YAXXZ)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_pt_log" in Funktion ""int __cdecl idle(void)" (?idle@@YAHXZ)".
     1>main.obj : error LNK2001: Nicht aufgelöstes externes Symbol "_thecore_profiler".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_log_rotate" in Funktion ""int __cdecl idle(void)" (?idle@@YAHXZ)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_thecore_tick" in Funktion ""int __cdecl idle(void)" (?idle@@YAHXZ)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_thecore_idle" in Funktion ""int __cdecl idle(void)" (?idle@@YAHXZ)".
     1>main.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_fdwatch_clear_event" in Funktion ""int __cdecl io_loop(struct fdwatch *)" (?io_loop@@YAHPAUfdwatch@@@Z)".
     1>questlua_quest.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_target.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_pet.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_marriage.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)" in Funktion ""int __cdecl quest::marriage_get_married_time(struct lua_State *)" (?marriage_get_married_time@quest@@YAHPAUlua_State@@@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_arena.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_game.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""char const * __cdecl lua_tostring(struct lua_State *,int)" (?lua_tostring@@YAPBDPAUlua_State@@H@Z)".
     1>questlua_target.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_pet.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_quest.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_guild.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)" in Funktion ""int __cdecl quest::guild_change_master_with_limit(struct lua_State *)" (?guild_change_master_with_limit@quest@@YAHPAUlua_State@@@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_monarch.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_game.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_isstring(struct lua_State *,int)" (?lua_isstring@@YAHPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_dobuffer(struct lua_State *,char const *,unsigned int,char const *)" (?lua_dobuffer@@YAHPAUlua_State@@PBDI1@Z)" in Funktion ""class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl quest::ScriptToString(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?ScriptToString@quest@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABV23@@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_dobuffer(struct lua_State *,char const *,unsigned int,char const *)" (?lua_dobuffer@@YAHPAUlua_State@@PBDI1@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)".
     1>questlua_pet.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)" in Funktion ""bool __cdecl quest::IsScriptTrue(char const *,int)" (?IsScriptTrue@quest@@YA_NPBDH@Z)".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_toboolean(struct lua_State *,int)" (?lua_toboolean@@YAHPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_settable(struct lua_State *,int)" (?lua_settable@@YAXPAUlua_State@@H@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::AddLuaFunctionTable(char const *,struct luaL_reg *)" (?AddLuaFunctionTable@CQuestManager@quest@@QAEXPBDPAUluaL_reg@@@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_settable(struct lua_State *,int)" (?lua_settable@@YAXPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_insert(struct lua_State *,int)" (?lua_insert@@YAXPAUlua_State@@H@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::AddLuaFunctionTable(char const *,struct luaL_reg *)" (?AddLuaFunctionTable@CQuestManager@quest@@QAEXPBDPAUluaL_reg@@@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_rawset(struct lua_State *,int)" (?lua_rawset@@YAXPAUlua_State@@H@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::AddLuaFunctionTable(char const *,struct luaL_reg *)" (?AddLuaFunctionTable@CQuestManager@quest@@QAEXPBDPAUluaL_reg@@@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_rawset(struct lua_State *,int)" (?lua_rawset@@YAXPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_pushcclosure(struct lua_State *,int (__cdecl*)(struct lua_State *),int)" (?lua_pushcclosure@@YAXPAUlua_State@@P6AH0@ZH@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::AddLuaFunctionTable(char const *,struct luaL_reg *)" (?AddLuaFunctionTable@CQuestManager@quest@@QAEXPBDPAUluaL_reg@@@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushcclosure(struct lua_State *,int (__cdecl*)(struct lua_State *),int)" (?lua_pushcclosure@@YAXPAUlua_State@@P6AH0@ZH@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_pushvalue(struct lua_State *,int)" (?lua_pushvalue@@YAXPAUlua_State@@H@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::BuildStateIndexToName(char const *)" (?BuildStateIndexToName@CQuestManager@quest@@QAEXPBD@Z)".
     1>questmanager.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushvalue(struct lua_State *,int)" (?lua_pushvalue@@YAXPAUlua_State@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_next(struct lua_State *,int)" (?lua_next@@YAHPAUlua_State@@H@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::BuildStateIndexToName(char const *)" (?BuildStateIndexToName@CQuestManager@quest@@QAEXPBD@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnil(struct lua_State *)" (?lua_pushnil@@YAXPAUlua_State@@@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::BuildStateIndexToName(char const *)" (?BuildStateIndexToName@CQuestManager@quest@@QAEXPBD@Z)".
     1>questlua_affect.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnil(struct lua_State *)" (?lua_pushnil@@YAXPAUlua_State@@@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushnil(struct lua_State *)" (?lua_pushnil@@YAXPAUlua_State@@@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_setgcthreshold(struct lua_State *,int)" (?lua_setgcthreshold@@YAXPAUlua_State@@H@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_dofile(struct lua_State *,char const *)" (?lua_dofile@@YAHPAUlua_State@@PBD@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua_oxevent.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl lua_dofile(struct lua_State *,char const *)" (?lua_dofile@@YAHPAUlua_State@@PBD@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaopen_debug(struct lua_State *)" (?luaopen_debug@@YAHPAUlua_State@@@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaopen_io(struct lua_State *)" (?luaopen_io@@YAHPAUlua_State@@@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaopen_math(struct lua_State *)" (?luaopen_math@@YAHPAUlua_State@@@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaopen_string(struct lua_State *)" (?luaopen_string@@YAHPAUlua_State@@@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaopen_table(struct lua_State *)" (?luaopen_table@@YAHPAUlua_State@@@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaopen_base(struct lua_State *)" (?luaopen_base@@YAHPAUlua_State@@@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""struct lua_State * __cdecl lua_open(void)" (?lua_open@@YAPAUlua_State@@XZ)" in Funktion ""public: bool __thiscall quest::CQuestManager::InitializeLua(void)" (?InitializeLua@CQuestManager@quest@@QAE_NXZ)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""char const * __cdecl lua_typename(struct lua_State *,int)" (?lua_typename@@YAPBDPAUlua_State@@H@Z)" in Funktion ""private: void __thiscall quest::CQuestManager::GotoSelectState(struct quest::QuestState &)" (?GotoSelectState@CQuestManager@quest@@AAEXAAUQuestState@2@@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_checkstack(struct lua_State *,int)" (?lua_checkstack@@YAHPAUlua_State@@H@Z)" in Funktion ""private: void __thiscall quest::CQuestManager::GotoSelectState(struct quest::QuestState &)" (?GotoSelectState@CQuestManager@quest@@AAEXAAUQuestState@2@@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_error(struct lua_State *)" (?lua_error@@YAHPAUlua_State@@@Z)" in Funktion ""public: struct quest::QuestState __thiscall quest::CQuestManager::OpenState(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)" (?OpenState@CQuestManager@quest@@QAE?AUQuestState@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaL_ref(struct lua_State *,int)" (?luaL_ref@@YAHPAUlua_State@@H@Z)" in Funktion ""public: struct quest::QuestState __thiscall quest::CQuestManager::OpenState(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)" (?OpenState@CQuestManager@quest@@QAE?AUQuestState@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""struct lua_State * __cdecl lua_newthread(struct lua_State *)" (?lua_newthread@@YAPAUlua_State@@PAU1@@Z)" in Funktion ""public: struct quest::QuestState __thiscall quest::CQuestManager::OpenState(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int)" (?OpenState@CQuestManager@quest@@QAE?AUQuestState@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_resume(struct lua_State *,int)" (?lua_resume@@YAHPAUlua_State@@H@Z)" in Funktion ""public: bool __thiscall quest::CQuestManager::RunState(struct quest::QuestState &)" (?RunState@CQuestManager@quest@@QAE_NAAUQuestState@2@@Z)".
     1>questlua.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl luaL_unref(struct lua_State *,int,int)" (?luaL_unref@@YAXPAUlua_State@@HH@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::CloseState(struct quest::QuestState &)" (?CloseState@CQuestManager@quest@@QAEXAAUQuestState@2@@Z)".
     1>questlua_speedserver.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_npc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_party.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_pet.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_guild.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_horse.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_item.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_marriage.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_building.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)" in Funktion ""int __cdecl quest::building_has_land(struct lua_State *)" (?building_has_land@quest@@YAHPAUlua_State@@@Z)".
     1>questlua_dungeon.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_forked.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_global.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""void __cdecl lua_pushboolean(struct lua_State *,int)" (?lua_pushboolean@@YAXPAUlua_State@@H@Z)".
     1>questlua_global.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl luaL_error(struct lua_State *,char const *,...)" (?luaL_error@@YAHPAUlua_State@@PBDZZ)" in Funktion ""int __cdecl quest::_set_quest_state(struct lua_State *)" (?_set_quest_state@quest@@YAHPAUlua_State@@@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl luaL_error(struct lua_State *,char const *,...)" (?luaL_error@@YAHPAUlua_State@@PBDZZ)".
     1>questlua_quest.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""int __cdecl luaL_error(struct lua_State *,char const *,...)" (?luaL_error@@YAHPAUlua_State@@PBDZZ)".
     1>questlua_guild.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""double __cdecl luaL_checknumber(struct lua_State *,int)" (?luaL_checknumber@@YANPAUlua_State@@H@Z)" in Funktion ""int __cdecl quest::guild_level(struct lua_State *)" (?guild_level@quest@@YAHPAUlua_State@@@Z)".
     1>questlua_pc.obj : error LNK2001: Nicht aufgelöstes externes Symbol ""double __cdecl luaL_checknumber(struct lua_State *,int)" (?luaL_checknumber@@YANPAUlua_State@@H@Z)".
     1>questlua_quest.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""int __cdecl lua_yield(struct lua_State *,int)" (?lua_yield@@YAHPAUlua_State@@H@Z)" in Funktion ""int __cdecl quest::quest_coroutine_yield(struct lua_State *)" (?quest_coroutine_yield@quest@@YAHPAUlua_State@@@Z)".
     1>questmanager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_close(struct lua_State *)" (?lua_close@@YAXPAUlua_State@@@Z)" in Funktion ""public: void __thiscall quest::CQuestManager::Destroy(void)" (?Destroy@CQuestManager@quest@@QAEXXZ)".
     1>questmanager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_remove(struct lua_State *,int)" (?lua_remove@@YAXPAUlua_State@@H@Z)" in Funktion ""public: static bool __cdecl quest::CQuestManager::ExecuteQuestScript(class quest::PC &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,char const *,int,class std::vector<struct quest::AArgScript *,class std::allocator<struct quest::AArgScript *> > *,bool)" (?ExecuteQuestScript@CQuestManager@quest@@SA_NAAVPC@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBDHPAV?$vector@PAUAArgScript@quest@@V?$allocator@PAUAArgScript@quest@@@std@@@5@_N@Z)".
     1>questmanager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""void __cdecl lua_rawget(struct lua_State *,int)" (?lua_rawget@@YAXPAUlua_State@@H@Z)" in Funktion ""public: static bool __cdecl quest::CQuestManager::ExecuteQuestScript(class quest::PC &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int,char const *,int,class std::vector<struct quest::AArgScript *,class std::allocator<struct quest::AArgScript *> > *,bool)" (?ExecuteQuestScript@CQuestManager@quest@@SA_NAAVPC@2@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HPBDHPAV?$vector@PAUAArgScript@quest@@V?$allocator@PAUAArgScript@quest@@@std@@@5@_N@Z)".
     1>safebox.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: unsigned int __thiscall CGrid::GetSize(void)" (?GetSize@CGrid@@QAEIXZ)" in Funktion ""public: bool __thiscall CSafebox::Add(unsigned long,class CItem *)" (?Add@CSafebox@@QAE_NKPAVCItem@@@Z)".
     1>safebox.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CGrid::CGrid(class CGrid *,int,int)" (??0CGrid@@QAE@PAV0@HH@Z)" in Funktion ""public: void __thiscall CSafebox::ChangeSize(int)" (?ChangeSize@CSafebox@@QAEXH@Z)".
     1>sectree.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CAttribute::~CAttribute(void)" (??1CAttribute@@QAE@XZ)" in Funktion ""public: void * __thiscall CAttribute::`scalar deleting destructor'(unsigned int)" (??_GCAttribute@@QAEPAXI@Z)".
     1>sectree.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CAttribute::Set(unsigned long,unsigned long,unsigned long)" (?Set@CAttribute@@QAEXKKK@Z)" in Funktion ""public: void __thiscall SECTREE::SetAttribute(unsigned long,unsigned long,unsigned long)" (?SetAttribute@SECTREE@@QAEXKKK@Z)".
     1>sectree.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CAttribute::Remove(unsigned long,unsigned long,unsigned long)" (?Remove@CAttribute@@QAEXKKK@Z)" in Funktion ""public: void __thiscall SECTREE::RemoveAttribute(unsigned long,unsigned long,unsigned long)" (?RemoveAttribute@SECTREE@@QAEXKKK@Z)".
     1>sectree.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: unsigned long __thiscall CAttribute::Get(unsigned long,unsigned long)" (?Get@CAttribute@@QAEKKK@Z)" in Funktion ""public: unsigned long __thiscall SECTREE::GetAttribute(long,long)" (?GetAttribute@SECTREE@@QAEKJJ@Z)".
     1>sectree_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CAttribute::CAttribute(unsigned long *,unsigned long,unsigned long)" (??0CAttribute@@QAE@PAKKK@Z)" in Funktion ""public: bool __thiscall SECTREE_MANAGER::LoadAttribute(class SECTREE_MAP *,char const *,struct SSetting &)" (?LoadAttribute@SECTREE_MANAGER@@QAE_NPAVSECTREE_MAP@@PBDAAUSSetting@@@Z)".
     1>sectree_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CTargaImage::~CTargaImage(void)" (??1CTargaImage@@QAE@XZ)" in Funktion ""public: bool __thiscall SECTREE_MANAGER::SaveAttributeToImage(int,char const *,class SECTREE_MAP *)" (?SaveAttributeToImage@SECTREE_MANAGER@@QAE_NHPBDPAVSECTREE_MAP@@@Z)".
     1>sectree_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: bool __thiscall CTargaImage::Save(char const *)" (?Save@CTargaImage@@QAE_NPBD@Z)" in Funktion ""public: bool __thiscall SECTREE_MANAGER::SaveAttributeToImage(int,char const *,class SECTREE_MAP *)" (?SaveAttributeToImage@SECTREE_MANAGER@@QAE_NHPBDPAVSECTREE_MAP@@@Z)".
     1>sectree_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CAttribute::CopyRow(unsigned long,unsigned long *)" (?CopyRow@CAttribute@@QAEXKPAK@Z)" in Funktion ""public: bool __thiscall SECTREE_MANAGER::SaveAttributeToImage(int,char const *,class SECTREE_MAP *)" (?SaveAttributeToImage@SECTREE_MANAGER@@QAE_NHPBDPAVSECTREE_MAP@@@Z)".
     1>sectree_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: char * __thiscall CTargaImage::GetBasePointer(int)" (?GetBasePointer@CTargaImage@@QAEPADH@Z)" in Funktion ""public: bool __thiscall SECTREE_MANAGER::SaveAttributeToImage(int,char const *,class SECTREE_MAP *)" (?SaveAttributeToImage@SECTREE_MANAGER@@QAE_NHPBDPAVSECTREE_MAP@@@Z)".
     1>sectree_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: void __thiscall CTargaImage::Create(int,int)" (?Create@CTargaImage@@QAEXHH@Z)" in Funktion ""public: bool __thiscall SECTREE_MANAGER::SaveAttributeToImage(int,char const *,class SECTREE_MAP *)" (?SaveAttributeToImage@SECTREE_MANAGER@@QAE_NHPBDPAVSECTREE_MAP@@@Z)".
     1>sectree_manager.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CTargaImage::CTargaImage(void)" (??0CTargaImage@@QAE@XZ)" in Funktion ""public: bool __thiscall SECTREE_MANAGER::SaveAttributeToImage(int,char const *,class SECTREE_MAP *)" (?SaveAttributeToImage@SECTREE_MANAGER@@QAE_NHPBDPAVSECTREE_MAP@@@Z)".
     1>skill.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: virtual __thiscall CPoly::~CPoly(void)" (??1CPoly@@UAE@XZ)" in Funktion ""public: __thiscall CSkillProto::~CSkillProto(void)" (??1CSkillProto@@QAE@XZ)".
     1>skill.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: int __thiscall CPoly::Analyze(char const *)" (?Analyze@CPoly@@QAEHPBD@Z)" in Funktion ""public: bool __thiscall CSkillManager::Initialize(struct SSkillTable *,int)" (?Initialize@CSkillManager@@QAE_NPAUSSkillTable@@H@Z)".
     1>skill.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: __thiscall CPoly::CPoly(void)" (??0CPoly@@QAE@XZ)" in Funktion ""public: __thiscall CSkillProto::CSkillProto(void)" (??0CSkillProto@@QAE@XZ)".
     1>utils.obj : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol "_time_str" in Funktion ""void __cdecl set_global_time(long)" (?set_global_time@@YAXJ@Z)".
     1>cryptlib-5.6.1MTd.lib(hex.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(basecode.obj) : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)" in Funktion ""void __cdecl std::fill<int *,int>(int *,int *,int const &)" (??$fill@PAHH@std@@YAXPAH0ABH@Z)".
     1>cryptlib-5.6.1MTd.lib(rng.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(mqueue.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(hmac.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(gf2n.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(ecp.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(ec2n.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(iterhash.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(hrtimer.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(rijndael.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(dsa.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(queue.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(asn.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(nbtheory.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(pubkey.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(tea.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(shacal2.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(algparam.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(filters.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(cast.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(des.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(camellia.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(rc5.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(rc6.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(mars.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(twofish.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(serpent.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(randpool.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(gfpcrypt.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(dll.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(modes.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(dh2.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(cryptlib.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(integer.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(osrng.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xran(void)" (?_Xran@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(hex.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(basecode.obj) : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)" in Funktion "__unwindfunclet$??0Exception@CryptoPP@@QAE@W4ErrorType@01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$0".
     1>cryptlib-5.6.1MTd.lib(rng.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(mqueue.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(hmac.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(gf2n.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(ecp.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(ec2n.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(iterhash.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(hrtimer.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(rijndael.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(dsa.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(queue.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(asn.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(nbtheory.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(pubkey.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(tea.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(shacal2.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(algparam.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(filters.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(cast.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(des.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(camellia.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(rc5.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(rc6.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(mars.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(twofish.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(serpent.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(randpool.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(gfpcrypt.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(dll.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(modes.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(dh2.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(cryptlib.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(integer.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(osrng.obj) : error LNK2001: Nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_String_base::_Xlen(void)" (?_Xlen@_String_base@std@@SAXXZ)".
     1>cryptlib-5.6.1MTd.lib(integer.obj) : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""private: static void __cdecl std::locale::facet::facet_Register(class std::locale::facet *)" (?facet_Register@facet@locale@std@@CAXPAV123@@Z)" in Funktion ""public: void __thiscall std::locale::facet::_Register(void)" (?_Register@facet@locale@std@@QAEXXZ)".
     1>cryptlib-5.6.1MTd.lib(integer.obj) : error LNK2019: Verweis auf nicht aufgelöstes externes Symbol ""public: static void __cdecl std::_Locinfo::_Locinfo_ctor(class std::_Locinfo *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z)" in Funktion ""public: __thiscall std::_Locinfo::_Locinfo(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (??0_Locinfo@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z)".
     1>D:\tt (1)\dev\Srcs\Server\game\src\..\game_d.exe : fatal error LNK1120: 161 nicht aufgelöste externe Verweise.
     1>Die Erstellung des Projekts "D:\tt (1)\dev\Srcs\Server\game\src\game.2008.vcxproj" ist abgeschlossen, build Ziel(e) -- FEHLER.

Fehler beim Erstellen

Verstrichene Zeit 00:05:34.48
